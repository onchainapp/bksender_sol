(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{277:function(e,t,n){"use strict";var r,o,c,l,d=n(2),m={EN:{header:(r={vip:"VIP",welcome:"Welcome to ",tutorial:"Tutorial",faq:"FAQ",checkBulksend:"Verification",faucet:"Faucet",erc20:"ERC20",dappSupports:"Network supports",step1Title:"Prepare",step2Title:"Confirm",step3Title:"Send",stepApproveTitle:"Approve",oldVersion:"Old",mainnet:"Ethereum Mainnet"},Object(d.a)(r,"mainnet","Mainnet"),Object(d.a)(r,"testnet","Testnet"),Object(d.a)(r,"devnet","Devnet"),Object(d.a)(r,"ethereum","Ethereum"),Object(d.a)(r,"ropsten","Ropsten"),Object(d.a)(r,"matic","Matic"),Object(d.a)(r,"tron","TRON"),Object(d.a)(r,"bnb","Binance"),Object(d.a)(r,"rinkeby","Heco"),Object(d.a)(r,"rinkeby","Rinkeby"),Object(d.a)(r,"kovan","Kovan"),Object(d.a)(r,"gorli","Görli"),Object(d.a)(r,"xDai","xDai"),Object(d.a)(r,"polkadot","Polkadot"),Object(d.a)(r,"huobiEco","Huobi ECO Chain"),Object(d.a)(r,"heco","Heco"),Object(d.a)(r,"conflux","Conflux"),Object(d.a)(r,"avalanche","Avalanche C Chain"),Object(d.a)(r,"fantom","Fantom"),Object(d.a)(r,"quark","Quark"),Object(d.a)(r,"moreNetwors","More Networks"),Object(d.a)(r,"allTestnets","All Ethereum Testnets"),Object(d.a)(r,"referral","Referral"),Object(d.a)(r,"connectWallet","Connect Wallet"),Object(d.a)(r,"moreTools","More"),Object(d.a)(r,"moreOptions",{revokeAllowance:"Revoke Allowance",refundBurnerKeyBalance:"Refund Burner-Funds",tokenMaker:"Create ERC20 Token"}),r),footer:{contract:"Contract"},home:{decimalsTitle:"Decimals",parsingTitle:"Checking the address list...",tokenSelectedTitle:"Token",tokenSelectedPlaceholder:"Select Or Insert your token address",addressesTitle:"Addresses with Amounts",addressesUploadDesc:"Drop your files here or ",addressesUploadDescClickUpload:"click to upload",addressesUploadFooterDesc:"Accepted: ",addressesInsertFooterDesc:"Separated by commas",addressesInsertExampleButtonText:"Show examples",addressesFileExampleButtonText:"Example files",manuallyInsert:"Insert manually",uploadInsert:"Upload file",manuallyInsertPlaceholder:"Insert address and amount, separate with comma",approveTitle:"Amount to approve",approveButton:"Approve",approveOption1:"Exact amount to be sent",approveOption2:"Your token balance",approveOptionUnlimited:"Unlimited",approveOptionUnlimitedRecommend:" amount",addressesTitleERC721:"Addresses with Token IDs",addressesTitleERC1155:"Addresses with Token IDs and Amounts",addressesInsertFooterDescERC721:"Separated by commas",manuallyInsertPlaceholderERC721:"Insert address and token id, separate with comma",manuallyInsertPlaceholderERC1155:"Insert address、token id and amount, separate with comma",manuallyInsertTokenAddress:"If you can't find the token in the list, insert token address manually"},info:{prepareStep0:"Checking the address list...",prepareStep1:"Checking the token information...",prepareStep2:"Checking the token balance...",prepareStep3:"Checking the token allowance...",prepareStep4:"Checking the token balance...",prepareStep5_1:"Checking the possible errors of the address list...",prepareStep5_2:"Checking the balances of he address list...",prepareStep5:"Constructing the bulksending data...",addressConfirming:"Checking addresses",addressSorting:"Sorting addresses",addressContructing:"Preparing transactions ",txChecking:"Checking transactions ",from:"from",to:"to",copied:"Copied",selecttNetwork:"Select a Solana network"},confirm:{approveHashTitle:"Approve transaction hash",waitToBeMined:"Please wait a while till this transaction was mined",prepareTransactionStatus:"Please wait a while, preparing transactions...",summaryTitle:"Summary",networkSpeedTitle:"Network Speed",networkSpeedSlow:"Slow",networkSpeedStandard:"",networkSpeedFast:"Fast",networkSpeedInstant:"Instant",resetApproval:"Reset allowance transaction hash",sendType:"Options for sending transactions",fastWay:"Use self-generated Key (recommended)",metamask:"Use Metamask (might be slow)",burnKeyTitle:"Your burn key",fastWayTitle:"Fastest recommended way to use bulksender.",fastWayDesc1:"It will generate a burner key on your device",fastWayDesc2:"After the burner key receives the funds, it will automatically post all txs to the blockchain",fastWayDesc3:"Once the bulksend is complete, the burner key will send the remaining ",fastWayDesc4:" balance to your address",metamaskDesc:"We highly recommend using self-generated key option, since your wallet can be slow and does not always function properly.",otherWalletDesc:"We highly recommend using self-generated key option, since this requires you to manually confirm transactions one by one.",copyPrivateKeyDes:"Please make a copy of your temporary private key",summary:{totalAddressesTitle:"Total number of addresses",totalAmountTitle:"Total number of tokens to be sent",totalTxsTitle:"Total number of transactions needed",totalTokenBalanceTitle:"Your token balance",totalTokenAllowanceTitle:"Your current bulksender allowance",balanceTitle:" balance",approximateCostTitle:"Approximate cost of operation",yourTitle:"Your ",gasPriceTitle:"Gas price",unknowBalance:"N/A"}},send:{pleaseSignTransactionsTitle1:"Please sign the transaction on",pleaseSignTransactionsTitle2:"",sentTransactionsTitle:"Bulksent transactions",sendTransactionsTitle:"You are sending the transaction",checkingTransactionsTitle:"Now wait till all the transactions were mined.",transactionSentoutTitle:"Transactions were sent out. ",congratulationsTransactionsTitle:"Congratulations, your bulksend transactions were sent out successfully",topUpTxTitle:"Top-up process transaction hash",refundRemainingTxTitle:"Refund remaining funds transaction hash",refundingRemainingTxTitle:"Refunding remaining funds to ",prepareTransactionStatus:"Please wait a while, preparing transactions ",prepareTransactionStatusMiddle:" of ",prepareTransactionStatusEnd:"...",verificationInfo1:"If some of your transactions are stuck or failed, you can download the result below and resend or use ",verificationInfo2:" page to identify recipients who received the tokens or ",verificationInfo3:" us to get the supports",contact:"Contact",verify:"Verification"},vip:{vipDesc:"Just only pay 1 ETH to be a vip member, all your transactions sent through Bulksender.app will be free forever! Keep in mind, you would still need to pay for the mining fees. If you need additional information, feel free to ask in our Telegram channel. ",hasBeenVipDesc:"You have become a VIP member, all your transactions sent through Bulksender.app will be free forever! Keep in mind, you would still need to pay for the mining fees. If you need additional information, feel free to ask in our Telegram channel. ",vipTxHash:"VIP buying transaction hash",vipBuySuccess:"Congratulations, you have been a vip member",sendNow:"Send now",txFreeTitle:"TX FREE",welcomeToJoinVIPTitle:"Welcome to join VIP",descLine0:"You have become a VIP member",descLine1:"Just only pay 1 ETH to be a vip member.",descLine1Start:"Just only pay ",descLine1End:" to be a vip member.",descLine2:"All your transactions sent through Bulksender.app will be free forever!",descLine3:"Keep in mind, you would still need to pay for the mining fees.",descLine4:"If you need additional information, feel free to ask in our Telegram channel "},tutorial:{tutorialDesc:"Just only pay 1 ETH to be a vip member, all your transactions sent through Bulksender.app will be free forever! Keep in mind, you would still need to pay for the mining fees. If you need additional information, feel free to ask in our Telegram channel. ",tutorialTitle:"Instruction",tutorialVedeoTitle:"Video Demo",step1Title:"Prepare data",step2Title:"Confirm transaction sumary",step3Title:"Send transaction",step0Title1:"Please make sure that you have installed and unlocked",step0Title2:"or visit our dapp in mobile browser of",step0TitleOr:" or ",step0Title3:"",step1:{li1:"Connect a wallet and select Solana Mainnet",li2:"Wait for token balances to load, if failed to load the tokens, you can manually insert your token address",li3:"Select the token that you would like to send from the list",li4:"Upload Excel, CSV, Txt addresses with balances or manually insert addresses separated by comma",li5:"Click NEXT"},step2:{li6:"Send Approve transaction",li7:"Confirm bulksending data, include txs, fees",li8:"Click SEND"},step3:{li9:"Confirm transaction in your wallet",li10:"Wait for an airdrop to complete"},done:"Done"},blockMultitabs:{blockTitle:"Multiple tabs detected",blockDesc:"You have been redirected to this page because there are more than one solana.Bulksender.app page opened. It may cause problems with Browser LocalStorage. Please close this page and go to the previous one."},refund:{refundTitle:"Burner Key",historyBurnerKeyTitle:"History Keys",copyPrivateKey:"Copy Privatekey"},bulksendResult:{title:"Bulksent Result",received:"Received",notReceived:"Pending received",failedReceived:"Failed received",failedReceivedDesc:"total recipients that were failed to receive due to the failed or rejected transactions",receivedDesc:"total recipients who received the tokens",notReceivedDesc:"total recipients waiting to receive the tokens, including pending transactions and transactions has not yet been sent"},checkBulksend:{title:"Batch Verification",nftSupportsCommingSoon:"Verification feature for NFT is coming soon",description:"If you have a list of recipients and a list of transactions from your previous bulk-send from our app, you can check which recipients received their tokens",yourTxs:"Your TX's hashes",yourTxsPlaceholder:"Insert the TX's hashes sent through Bulksender",yourAddressList:"Original list of recipients",yourAddressListERC721:"Original receiver addresses with token ids",yourAddressListERC1155:"Original receiver addresses with token ids, amounts",duplicates:"Duplicates",matched:"Matched",received:"Received",notReceived:"Not received",matchedDesc:"recipients that were found in your actual txs from your original list.",receivedDesc:"total recipients from your filled txs.",notReceivedDesc:"mismatch was detected from your original list. The address that either did not receive tokens, or it did not receive the full amount.",suggestionDdCheck:"We highly recommend that you double-check the CSV result."},referral:{referralTitle:"BulkSender Referral Program",referralDesc1:"Put your address below, copy and share the generated link with your referrals. You will earn",referralDesc2:" 0.01 ETH ",referralDesc3:"from any airdrop done by your referral.",copied:"Link Copied",referralDesc:"You will earn 0.01 ETH from any airdrop done by your referral.",referralDescStart:"You will earn ",referralDescEnd:" from any airdrop done by your referral.",inputAddressTitle:"Put your ethereum wallet address",linkGeneratedTitle:"Generated referral link",linkGenerated:"Generated"},revoke:{revokeTitle:"Revoke Allowance",revokeDescription:'If you need to remove current approval to bulksender, please select the token address and click "Revoke" button. That will set allowance to zero',currentAllowance:"Your current bulksender allowance",revokeHashTitle:"Revoke allowance transaction hash"},connectWallet:{connectWalletTitle:"Connect a Solana wallet",connectWalletDesc:"To start using Bulksender",metamask:"Phantom",glow:"Glow",walletLink:"Coinbase Wallet",walletConnect:"WalletConnect",fortmatic:"Fortmatic",mewConnect:"MEW Connect",imToken:"imToken",huobiWallet:"Huobi Wallet",trustWallet:"Trust Wallet",walletConnectImTokenConnectingTitle:"Follow imToken Instructions",walletConnectHuobiWalletConnectingTitle:"Follow Huobi Wallet Instructions",metamaskConnectingTitle:"Install and Unlock Phantom",metamaskUnlockTitle:"Please Unlock Solana Wallet",metamaskConnectingDesc:"You need to click the allow button to connect your account",walletConnectConnectingTitle:"Follow WalletConnect Instructions",walletConnectConnectingDesc:"You may need to scan the WalletConnect QR code from screen by Trust Wallet, Rainbow Wallet and more...",walletConnectImTokenConnectingDesc:"You may need to scan the WalletConnect QR code from screen by imToken",walletConnectHuobiWalletConnectingDesc:"You may need to scan the WalletConnect QR code from screen by Huobi Wallet on discover tab",walletLinkConnectingTitle:"Follow Coinbase Instructions",walletLinkConnectingDesc:"You may need to scan the wallet link QR code from screen.",fortmaticConnectingDesc:"You need to login using Fortmatic hosted wallet to continue",fortmaticConnectingTitle:"Install and Unlock Solflare",dontHaveMetamask:"Dont have Phantom?",dontHaveCoinbase:"Dont have Coinbase?",dontHaveGlow:"Dont have Glow?",glowConnectingTitle:"Install and Unlock Glow",dontHaveimToken:"Dont have imToken?",dontHaveHuobiWallet:"Dont have Huobi Wallet?",dontHaveWalletConnect:"Dont have",dontHaveFortmatic:"Dont have Solflare",currentUsingWallet:"Current selected wallet",logoutWallet:"Logout",switchWallet:"Switch",solletConnectingTitle:"Open and Unlock Sollet",slopeConnectingTitle:"Install and Unlock Slope",dontHaveSollet:"Dont have Sollet?",dontHaveSlope:"Dont have Slope?"},button:{deleteAllInvalidAddresses:"Delete them",deleteAllInvalidHashes:"Delete them",keepFirstOne:"Keep the first one",combineBalances:"Combine balances",keepDuplicated:"Keep duplicates",next:"NEXT",back:"Back",send:"SEND",checkout:"Chcek out",skip:"Skip",buyVIP:"Buy",signKey:"SIGN KEY",oneClick:"SEND WITH SIGN KEY",gotIt:"Got it",install:"Install",generate:"Generate",copyLink:"Copy Link",connect:"Connect",open:"OPEN",revoke:"Revoke",refund:"Refund",downloadCSV:"Download CSV",check:"Check",downloadBulksent:"Download TX hashes"},warning:{unFinishedTasks:"Found you have unFinished tasks! Please wait a while."},error:{tokenSelectedNull:"Please select your token",addressNull:"Please upload or insert addresses with amounts",prepareDataError:"Failed to construct the bulksending data, please try again!",prepareTransactionsError:"Failed to prepare the transaction, please try again!",checkOwnersDataError:"Invalid token id, maybe some token id does not exist, please check and try again!",checkBadAddressDataError:"Failed to check the bad addresses, please try again!",checkSelfBalanceDataError:"Failed to check the balances of addresses list, please try again!",addressInvalid:"Please delete the invalid addresses",addressDuplicated:"Please delete or combine the duplicated addresses",insufficientTokenBalance:"Insufficient token balance",insufficientEtherBalance:"Insufficient ether balance",insufficientBaseEtherBalance:", please make sure your balance is at least ",invalidEthereumAddress:"is a invalid wallet address",cantSupportsContracts:"is a contract address, unsupported receiver address type",invalidEthereumAmount:"wrong amount",invalidEthereumAmountDecimals:"wrong decimal amount",invalidEthereumAmounOwnership:"wrong ownership, it seems that you dont have this token id ",invalidEthereumAddressAndAmount:"is a invalid wallet address and wrong amount",invalidEthereumAddressAndAmountAndTokenId:"is a invalid wallet address、wrong token id and wrong amount",invalidEthereumAddressAndTokenId:"is a invalid wallet address and wrong token id",invalidTokenIdShouldBeNumber:"wrong token id，it should be an integer",invalidAmountShouldBeNumber:"wrong amount, it should be an integer",invalidAmountShouldNotBeEmpty:"wrong amount, it should be greater than zero",invalidTokenIdAndAmountShouldBeNumber:"wrong token id and amount, they are should be the integer",insufficientTokenIDBalance:"insufficient token balance to send",addressesCannotBeProcessed:" cannot be sent, please delete it",duplicatedEthereumAddresses:"duplicate address",duplicatedEthereumAmount:"duplicate token id",duplicatedEthereumAddressesTitle:"Duplicated wallet addresses",invalidEthereumAddressesTitle:"Invalid wallet addresse or amount",badAddressCantBeProcessed:"The below addresses cannot be processed",invalidEthereumAddressesOrTokenIdsTitle:"Invalid wallet addresse or token id",resetApprovalErrorOption1:"Do the batch to spend your left allowance of bulksender",resetApprovalErrorOption2:"Reset the allowance",resetApprovalError:"Detected that your token dont allow to approve when you have remaining allowance, you can do:",approvalError:"Can not approve for your token, please check your token contract source code if it has the approve function",lineOrder:"Line ",line:"",approveError:"Approve error detected",metamaskNotFoundError:"Please install Metamask wallet firstly",metamaskLockedError:"Please unlock Phantom or Solflare or Sollet or Slope wallet",metamaskNotFoundMobileError:"Open in Trust Wallet",invalidWalletAddress:"Invalid wallet address",anyWalletNotFoundError:"Please connect to your Ethereum wallet",openLink1:"https://link.trustwallet.com/open_url?coin_id=60&url=https://bulksender.app",amountLessTheMiniDepositAmountToActiveAccount:" to active this new account",amountLessTheMiniDepositAmount:" wrong amount, the minimum deposit amount is",hashMaynotExist:" may not match the selected token or the transaction was not confirmed or does not send through Bulksender, please check it",duplicatedEthereumHash:"duplicate tx hash",duplicatedEthereumHashesTitle:"Duplicated TX hashes",invalidEthereumHash:"is a invalid TX hash",badHashesCantBeProcessed:"The below hashes cannot be processed"}},CN:{header:(o={vip:"会员",tutorial:"教程",faq:"问题",checkBulksend:"验证",welcome:"欢迎来到 ",dappSupports:"支持网络",step1Title:"准备",step2Title:"确认",step3Title:"发送",stepApproveTitle:"授信",oldVersion:"旧版本",mainnet:"主网",testnet:"测试网络",devnet:"开发网络",ethereum:"以太坊",ropsten:"Ropsten",matic:"Matic",tron:"波场",bnb:"币安链",rinkeby:"火币生态链"},Object(d.a)(o,"rinkeby","Rinkeby"),Object(d.a)(o,"kovan","Kovan"),Object(d.a)(o,"gorli","Görli"),Object(d.a)(o,"xDai","xDai"),Object(d.a)(o,"polkadot","波卡"),Object(d.a)(o,"huobiEco","火币生态链"),Object(d.a)(o,"heco","火币生态链"),Object(d.a)(o,"conflux","Conflux"),Object(d.a)(o,"avalanche","Avalanche C Chain"),Object(d.a)(o,"fantom","Fantom"),Object(d.a)(o,"quark","夸克链"),Object(d.a)(o,"moreNetwors","更多网络"),Object(d.a)(o,"allTestnets","以太坊所有测试网"),Object(d.a)(o,"faucet","测试币"),Object(d.a)(o,"erc20","ERC20"),Object(d.a)(o,"referral","推荐返佣"),Object(d.a)(o,"connectWallet","连接钱包"),Object(d.a)(o,"moreTools","更多"),Object(d.a)(o,"moreOptions",{revokeAllowance:"取消授信额度",refundBurnerKeyBalance:"检查本地Key",tokenMaker:"创建代币"}),o),footer:{contract:"合约"},home:(c={decimalsTitle:"位数",parsingTitle:"正在检查地址列表...",tokenSelectedTitle:"代币",tokenSelectedPlaceholder:"选择代币/粘贴代币合约地址",addressesTitle:"收款地址和数量",addressesTitleERC721:"收款地址和代币ID",addressesUploadDesc:"将文件拖到此处或",addressesUploadDescClickUpload:"点击上传",addressesUploadFooterDesc:"支持文件类型：",addressesInsertFooterDesc:"每一行应包括地址和数量，逗号分隔",addressesInsertFooterDescERC721:"每一行应包括地址和代币ID，逗号分隔",addressesInsertFooterDescERC1155:"每一行应包括地址、代币ID及数量，逗号分隔",addressesInsertExampleButtonText:"查看例子",addressesFileExampleButtonText:"示例文件"},Object(d.a)(c,"tokenSelectedPlaceholder","请选择代币或粘贴代币地址"),Object(d.a)(c,"manuallyInsert","手动输入"),Object(d.a)(c,"uploadInsert","上传文件"),Object(d.a)(c,"manuallyInsertPlaceholder","请输入地址和数量，以逗号分隔"),Object(d.a)(c,"manuallyInsertPlaceholderERC721","请输入地址和代币ID，以逗号分隔"),Object(d.a)(c,"approveTitle","授信额度"),Object(d.a)(c,"approveButton","去授信"),Object(d.a)(c,"approveOption1","发送数量"),Object(d.a)(c,"approveOption2","代币余额"),Object(d.a)(c,"approveOptionUnlimited","不限制"),Object(d.a)(c,"approveOptionUnlimitedRecommend","(之后无需重复授信)"),Object(d.a)(c,"addressesTitleERC1155","收款地址、代币ID及数量"),Object(d.a)(c,"manuallyInsertPlaceholderERC1155","请输入地址、代币ID及数量，以逗号分隔"),Object(d.a)(c,"manuallyInsertTokenAddress","如果未能从列表中找到要发送的代币，请手动粘贴代币地址"),c),info:{prepareStep0:"正在检查地址列表...",prepareStep1:"正在检查代币信息...",prepareStep2:"正在检查代币余额...",prepareStep3:"正在检查代币授信...",prepareStep4:"正在检查代币余额...",prepareStep5_1:"正在检查无效地址...",prepareStep5_2:"正在检查地址余额...",prepareStep5:"正在组装批量发送数据...",addressConfirming:"确认发送地址",addressSorting:"正在排序",addressContructing:"正在准备交易批次",txChecking:"正在确认交易 ",from:"从",to:"到",copied:"复制成功",selecttNetwork:"选择网络"},vip:{vipDesc:"只需要支付 1 ETH，您将成为VIP会员，之后您在本站的所有交易将永久免费，如果您需要了解更多，请添加微信或直接在电报群中@管理员 ",hasBeenVipDesc:"您已经是VIP会员，您在本站的所有交易将永久免费，请放心使用，使用过程中遇到任何问题，请添加微信或直接在电报群中@管理员 ",vipTxHash:"会员购买交易号",vipBuySuccess:"恭喜，您已经成为会员",sendNow:"开始批量发送",txFreeTitle:"终身免费",welcomeToJoinVIPTitle:"欢迎加入VIP",descLine0:"您已经是VIP会员.",descLine1:"只需要支付 1 ETH，您将成为VIP会员.",descLine1Start:"只需要支付 ",descLine1End:"，您将成为VIP会员.",descLine2:"您在本站的所有交易将永久免费.",descLine3:"",descLine4:"如果您想了解更多相关信息，请添加微信或者直接在电报群中@管理员即可 "},tutorial:{tutorialDesc:"Just only pay 1 ETH to be a vip member, all your transactions sent through Bulksender.app will be free forever! Keep in mind, you would still need to pay for the mining fees. If you need additional information, feel free to ask in our Telegram channel. ",tutorialTitle:"介绍",tutorialVedeoTitle:"视频教程",step1Title:"准备数据",step2Title:"确认数据",step3Title:"开始发送",step0Title1:"请确保已安装且解锁",step0Title2:"或在",step0TitleOr:"或",step0Title3:"中打开该Dapp",step1:{li1:"连接钱包，选择以太坊主网",li2:"等待代币列表加载完成，代币列表如果加载失败，你可以尝试手动插入您的代币地址",li3:"从代币列表中选择要空投的代币",li4:"上传包含地址，余额的Excel, CSV, Txt文件或者手动插入地址和余额，逗号分隔",li5:"点击下一步"},step2:{li6:"发送授信交易",li7:"确认批量发送数据摘要，包含代币总数、地址总数、费用等",li8:"点击发送"},step3:{li9:"打开钱包确认交易",li10:"等待空投完成"},done:"完成"},blockMultitabs:{blockTitle:"检测到已打开多个网站标签页",blockDesc:"您被自动跳转到此页面是因为您在浏览器的多个标签中打开了Solana.Bulksender.app, 它可能会引起浏览器本地存储(LocalStorage)的问题. 请关闭此页面，前往已打开页面继续使用."},referral:{referralTitle:"BulkSender 推荐返佣",referralDesc1:"在下方输入框中填写您的钱包地址，生成推荐链接，然后复制链接并分享出去，任何通过您的推荐链接产生的每一笔空投发送，您都将获得",referralDesc2:" 0.01 ETH.",referralDesc3:"",copied:"复制成功",referralDescStart:"每笔空投发送您将获得 ",referralDescEnd:" 的佣金",referralDesc:"每笔空投发送您将获得 0.01 ETH 的佣金",inputAddressTitle:"输入您的以太坊钱包地址",linkGeneratedTitle:"已生成链接",linkGenerated:"已生成"},connectWallet:{connectWalletTitle:"选择Solana钱包",connectWalletDesc:"开始使用Bulksender",metamask:"Phantom",glow:"Glow",walletLink:"Coinbase Wallet",walletConnect:"WalletConnect",fortmatic:"Fortmatic",mewConnect:"MEW Connect",imToken:"imToken",huobiWallet:"火币钱包",trustWallet:"Trust Wallet",metamaskConnectingTitle:"安装并解锁Phantom",metamaskConnectingDesc:"你需要同意关联您的账户",metamaskUnlockTitle:"请解锁Solana钱包",walletConnectConnectingTitle:"根据WalletConnect的介绍",walletConnectImTokenConnectingTitle:"根据imToken钱包的功能介绍",walletConnectHuobiWalletConnectingTitle:"根据火币钱包的功能介绍",walletConnectConnectingDesc:"你可以通过imToken、火币钱包、Trust钱包 (币安官方加密货币钱包)、麦子钱包以及任何WalletConnect兼容的钱包来扫描屏幕中的二维码",walletConnectImTokenConnectingDesc:"你可以通过imToken首页右上角的扫一扫功能，扫描屏幕中的二维码以继续使用",walletConnectHuobiWalletConnectingDesc:"你可以通过火币钱包发现页右上角的扫一扫功能，扫描屏幕中的二维码以继续使用",walletLinkConnectingTitle:"根据Coinbase的介绍",walletLinkConnectingDesc:"你需要通过Coinbase Wallet中的WalletLink来扫描屏幕中的二维码",fortmaticConnectingDesc:"请先登录Fortmatic钱包以继续使用",fortmaticConnectingTitle:"安装并解锁Solflare",solletConnectingTitle:"打开并解锁Sollet",slopeConnectingTitle:"安装并解锁Slope",dontHaveMetamask:"没有Phantom?",dontHaveCoinbase:"没有Coinbase?",dontHaveimToken:"没有imToken?",dontHaveHuobiWallet:"没有火币钱包?",dontHaveFortmatic:"没有Solflare?",dontHaveWalletConnect:"还没有",dontHaveSollet:"没有Sollet?",dontHaveSlope:"没有Slope?",dontHaveGlow:"没有Glow?",glowConnectingTitle:"安装并解锁Glow",currentUsingWallet:"当前使用钱包",logoutWallet:"退出账户",switchWallet:"切换钱包"},confirm:(l={approveHashTitle:"授信交易号",waitToBeMined:"请耐心等待一会，直到该授信成功",prepareTransactionStatus:"请稍等, 正在准备转账...",summaryTitle:"摘要",networkSpeedTitle:"交易速度",networkSpeedSlow:"慢",networkSpeedStandard:"",networkSpeedFast:"快",networkSpeedInstant:"极速",resetApproval:"重置授信额度交易号",sendType:"批量发送方式",fastWay:"一键转账 (快速模式)",metamask:"Metamask (可能会慢)",burnKeyTitle:"「加速秘钥」",fastWayTitle:"建议使用该模式，可节省时间，避免错误",fastWayDesc1:"该模式会在您的设备本地创建一把「加速秘钥」",fastWayDesc2:"在「加速秘钥」接收到批量发送所需要的费用后，它将自动将所有交易发送到区块链中",fastWayDesc3:"一旦批量转账完成，「加速秘钥」会将剩余",fastWayDesc4:"发送回您的钱包地址",copyPrivateKeyDes:"请备份该加速秘钥",metamaskDesc:"我们强烈建议使用「一键转账」, 不然您的钱包可能会变的很慢，而且Metamask操作经常卡顿",otherWalletDesc:"我们强烈建议使用「一键转账」, 因为这种方式，需要一个一个的手动确认交易"},Object(d.a)(l,"copyPrivateKeyDes","请备份「加速秘钥」账户私钥"),Object(d.a)(l,"summary",{totalAddressesTitle:"地址总数",totalAmountTitle:"代币发送总数",totalTxsTitle:"交易总数",totalTokenBalanceTitle:"代币余额",totalTokenAllowanceTitle:"当前授信额度",balanceTitle:"余额",approximateCostTitle:"预估费用",yourTitle:"你的",gasPriceTitle:"交易速度",unknowBalance:"不适用"}),l),revoke:{revokeTitle:"取消授信额度",revokeDescription:"如果需要移除对Bulksender智能合约的授信额度，请从下面的列表中选择对应代币，然后点击 “重置”, 成功后授信额度将自动置为零",currentAllowance:"当前对Bulksender的授信额度",revokeHashTitle:"取消授信交易号"},refund:{refundTitle:"当前本地加速账户信息",historyBurnerKeyTitle:"历史本地加速账户信息",copyPrivateKey:"复制私钥"},bulksendResult:{title:"批量发送数据",received:"已收到",notReceived:"等待中",failedReceived:"发送失败",failedReceivedDesc:"因为交易失败或者钱包拒绝，未能成功接收代币的地址列表",receivedDesc:"已成功接收代币的地址列表",notReceivedDesc:"等待接收代币的地址列表，包括正在确认中的交易和未开始发送的交易 "},checkBulksend:{title:"验证批量发送",nftSupportsCommingSoon:"NFT批量验证即将上线，请耐心等待",description:"通过已知的交易号和空投发送数据，校验接收地址列表中，哪些地址收到了代币，哪些地址未收到",currentAllowance:"当前对Bulksender的授信额度",revokeHashTitle:"取消授信交易号",yourTxs:"交易哈希号",yourTxsPlaceholder:"请输入通过Bulksender发送的交易哈希号",yourAddressList:"接收地址和数量",yourAddressListERC721:"接收地址和Token ID",yourAddressListERC1155:"接收地址, Token ID以及数量",duplicates:"重复的",matched:"完全匹配",received:"已收到",notReceived:"未收到",matchedDesc:"从输入的交易号和输入的原始发送文件中，完全匹配到的地址和数量信息",receivedDesc:"从输入的交易号中查询到的地址和数量信息",notReceivedDesc:"从输入的交易号和输入的原始发送文件中，未完全匹配到的地址和数量信息，要么是未收到代币，要么就是有收到，但数量不对",suggestionDdCheck:"我们强烈建议您对下载结果再次确认"},send:{pleaseSignTransactionsTitle1:"请打开",pleaseSignTransactionsTitle2:"钱包授权交易",sentTransactionsTitle:"已发送交易",sendTransactionsTitle:"正在发送交易",checkingTransactionsTitle:"请等待交易被确认。",transactionSentoutTitle:"交易已全部发出，",congratulationsTransactionsTitle:"祝贺，批量交易发送成功！",topUpTxTitle:"转移费用至「加速秘钥」交易号",refundRemainingTxTitle:"剩余费用退回交易号",refundingRemainingTxTitle:"正在将剩余费用退回至",prepareTransactionStatus:"请稍等, 正在准备转账第",prepareTransactionStatusMiddle:"笔 (总共",prepareTransactionStatusEnd:"笔)...",verificationInfo1:"如果其中一些交易卡住或失败，你可以从下面的数据中下载结果或者使用 ",verificationInfo2:"页面校验哪些地址收到了代币 或者 ",verificationInfo3:" 我们获得技术支持",contact:"联系",verify:"验证 "},button:{deleteAllInvalidAddresses:"删除无效地址",deleteAllInvalidHashes:"删除无效交易号",keepFirstOne:"保留第一个",combineBalances:"合并重复项",keepDuplicated:"保留重复项",next:"下一步",back:"上一步",send:"发送",checkout:"查看",skip:"跳过",buyVIP:"购买",signKey:"签名",oneClick:"一键转账",gotIt:"知道了",install:"安装",generate:"生成",copyLink:"复制链接",connect:"连接",open:"打开",revoke:"重置",refund:"退款",downloadCSV:"下载CSV",check:"检查",downloadBulksent:"下载交易号"},warning:{unFinishedTasks:"发现您有未完成的批量发送！请耐心等待!"},error:{tokenSelectedNull:"请选择代币",addressNull:"请上传或插入地址",prepareDataError:"数据组装出错，请重试!",prepareTransactionsError:"准备交易出错，请重试!",checkOwnersDataError:"代币ID错误，某些代币ID不存在，请检查后重试",checkSelfBalanceDataError:"检查地址余额请求异常，请重试！",checkBadAddressDataError:"检查无效地址请求异常，请重试！",addressInvalid:"请处理无效的地址或数量",addressDuplicated:"请删除或合并重复地址",insufficientTokenBalance:"代币余额不足",insufficientEtherBalance:"以太币余额不足",insufficientBaseEtherBalance:", 请保证钱包至少有",invalidEthereumAddress:"无效的钱包地址",cantSupportsContracts:"为合约地址，不支持发送",invalidEthereumAmount:"无效的发送数量",invalidEthereumAddressAndAmountAndTokenId:" 地址无效、代币ID无效、发送数量无效",invalidEthereumAddressAndTokenId:" 地址无效、代币ID无效",invalidTokenIdShouldBeNumber:" 代币ID无效，ID必须是整数",invalidAmountShouldBeNumber:" 无效的发送数量，发送数量必须是整数",invalidAmountShouldNotBeEmpty:",请填写有效的发送数量(发送数量至少为1)",invalidTokenIdAndAmountShouldBeNumber:" 代币ID和发送数量无效, 它们必须是整数",invalidEthereumAmountDecimals:"发送数量中的小数点位数错误",invalidEthereumAmounOwnership:"权限错误，原因可能是此代币ID不属于你",insufficientTokenIDBalance:"该代币余额不足",duplicatedEthereumAmount:"代币ID重复",invalidEthereumAddressAndAmount:"无效的钱包地址和发送数量",addressesCannotBeProcessed:"无法发送，请删除后重试",duplicatedEthereumAddresses:"地址重复",duplicatedEthereumAddressesTitle:"发现有重复钱包地址",badAddressCantBeProcessed:"以下地址或金额不能发送",invalidEthereumAddressesTitle:"钱包地址或发送数量不合法",invalidEthereumAddressesOrTokenIdsTitle:"钱包地址或代币ID无效",resetApprovalErrorOption1:"发送批量交易，将剩余授信额度消耗完",resetApprovalErrorOption2:"重置授信额度",resetApprovalError:"检测到您的代币不允许在有剩余授信额度的情况下，重复进行授信，您有2个选项:",approvalError:"授信失败，请检查您的代币合约代码，是否包含授信功能",lineOrder:"第",line:"行",approveError:"检测到授信错误",metamaskNotFoundError:"请先安装Metamask钱包",metamaskNotFoundMobileError:'请打开imToken，或在imToken浏览中搜索 "批量打币"',metamaskLockedError:"请打开Phantom/Solflare/Sollet/Slope解锁账户",invalidWalletAddress:"钱包地址无效",anyWalletNotFoundError:"请先连接您的以太坊钱包，以继续使用",openLink1:"imtokenv2://navigate?screen=DappView&url=https://www.bulksender.app",amountLessTheMiniDepositAmountToActiveAccount:"，以激活此新账户",amountLessTheMiniDepositAmount:" 发送数量无效, 最小发送数量为",hashMaynotExist:"可能和选择的代币不匹配或者交易还没被确认或者不是通过Bulksender发送, 请确认后重试",duplicatedEthereumHash:"交易号重复",duplicatedEthereumHashesTitle:"发现有重复交易号",invalidEthereumHash:"是无效的交易号",badHashesCantBeProcessed:"以下交易号不能使用"}}};t.a=m},752:function(e,t,n){"use strict";n.r(t);n(60),n(50),n(30),n(44),n(160);var r,o=n(2),c=(n(78),n(96),n(90),n(753),n(34),n(1)),l=(n(74),n(75),n(29),n(159)),d=n.n(l),m=n(436),f=n.n(m),k=n(10),h=n(109),T=n(4),v=n(437),w=n(6),E=n(20),y=n(215);function A(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(object);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,n)}return t}function S(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?A(Object(source),!0).forEach((function(t){Object(o.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):A(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}var O,x,C,R,I,_,P,D,N,j,B,L,F,W,K,H=function(e){var t=e.newAccount;(0,e.commit)("IDENTIFY",Object(k.toChecksumAddress)(t[0])),window.location.reload()},G={netId:function(e){return e.netId},isApiValible:function(e){return 1==e.netId},networkName:function(e){return h.a["netId".concat(e.netId)].networkName},currency:function(e){return h.a["netId".concat(e.netId)].currencyName},miniDeposit:function(e){return Object(T.a)(e.minDeposiBalance).div(Object(T.a)(10).pow(e.decimals)).toString(10)},networkConfig:function(e){var t=h.a["netId".concat(e.netId)];return e.workedRPC&&(t.rpcUrl=e.workedRPC),t},getEthereumProvider:function(e,t){return Object(c.a)(regeneratorRuntime.mark((function n(){var r,o,c,l,d;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:r=e.providerName,e.networkName,n.t0=r,n.next="Solflare"===n.t0?4:"Glow"===n.t0?5:"Slope"===n.t0?6:"Sollet"===n.t0?10:"walletConnect"===n.t0?18:(n.t0,24);break;case 4:return n.abrupt("return",window.solflare);case 5:return n.abrupt("return",window.glowSolana);case 6:if(!window.SlopeForBulksender){n.next=8;break}return n.abrupt("return",window.SlopeForBulksender);case 8:return o=new window.Slope,n.abrupt("return",window.SlopeForBulksender=o);case 10:if(!window.solletForBulksender){n.next=12;break}return n.abrupt("return",window.solletForBulksender);case 12:return c=t.networkConfig.rpcUrl,new w.a(c,"confirmed"),"https://www.sollet.io",l=new v.a("https://www.sollet.io"),window.solletForBulksender=l,n.abrupt("return",l);case 18:if(!window.walletProviderForBulksender){n.next=20;break}return n.abrupt("return",window.walletProviderForBulksender);case 20:return d=new f.a({rpc:{1:"https://api.mycryptoapi.com/eth"},bridge:"https://bridge.walletconnect.org",qrcode:!0,pollingInterval:15e3}),window.walletProviderForBulksender=d,n.abrupt("return",d);case 24:return n.abrupt("return",window.solana);case 25:case"end":return n.stop()}}),n)})))},customRPCProvider:function(e,t){return Object(c.a)(regeneratorRuntime.mark((function e(){var n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.networkConfig.rpcUrl,r=new d.a.providers.HttpProvider(n),e.abrupt("return",r);case 3:case"end":return e.stop()}}),e)})))},web3:function(e,t){return Object(c.a)(regeneratorRuntime.mark((function e(){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.getEthereumProvider();case 2:return n=e.sent,e.abrupt("return",Object.freeze(new d.a(n)));case 4:case"end":return e.stop()}}),e)})))},connection:function(e,t){return Object(c.a)(regeneratorRuntime.mark((function e(){var n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.networkConfig.rpcUrl,r=new w.a(n,"confirmed"),e.abrupt("return",Object.freeze(r));case 3:case"end":return e.stop()}}),e)})))},connectionChanged:function(e,t){return Object(c.a)(regeneratorRuntime.mark((function e(){var n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.networkConfig.rpcUrl,r=new w.a(n,"confirmed"),e.abrupt("return",r);case 3:case"end":return e.stop()}}),e)})))},customRPCWeb3:function(e,t){return Object(c.a)(regeneratorRuntime.mark((function e(){var n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.networkConfig.rpcUrl,r=new d.a.providers.HttpProvider(n),e.abrupt("return",Object.freeze(new d.a(r)));case 3:case"end":return e.stop()}}),e)})))}},M={IDENTIFY:function(e,t){e.ethAccount=t},SET_NET_ID:function(e,t){t=parseInt(t,10),e.netId=t},SET_BALANCE:function(e,t){e.balance=Object(T.a)(t).div(Object(T.a)(10).pow(Object(T.a)(e.decimals))).toString(10)},SET_WALLET_STATE:function(e,t){e.walletState=t},SET_ADDRESS:function(e,t){var address=t.address,n=t.valid,r=void 0!==n&&n;e.address={value:address,valid:r}},SET_PUBLICKEY:function(e,t){e.accountPublicKey=t},SAVE_GAS_PRICE:function(e,t){e.gasPrice=t},SAVE_TOKENS_LIST:function(e,t){e.tokensList=t},SAVE_WORKED_RPC:function(e,t){e.workedRPC=t},SET_GAS_PRICE_ORACLE_LOCKED:function(e,t){e.gasPriceOracleLocked=t},SAVE_TOKENS:function(e,t){e.tokens=t},SET_TOKEN_ADDRESS:function(e,t){e.tokenAddress=t},SET_FETCHING:function(e,t){e.isFetching=t},SET_PROVIDER_NAME:function(e,t){e.providerName=t},SET_NETWORK_NAME:function(e,t){e.networkName=t},SET_INITIALIZED:function(e,t){e.initialized=t},SET_IS_IMTOKEN:function(e,t){e.isImToken=t},SET_IS_TRUSTWALLET:function(e,t){e.isTrustWallet=t},SET_WALLET_NAME:function(e,t){e.walletName=t},SET_MIN_DEPOSIT_BALANCE:function(e,t){e.minDeposiBalance=t},SAVE_ETH_PRICE:function(e,t){e.ethPrice=t},SET_ETH_PRICE_LOADED:function(e,t){e.ethPriceLoaded=t},SET_MIN_TOKEN_ACCOUNT_INIT_AMOUNT:function(e,t){e.minTokenAccountInitAmount=t},SET_MIN_GAS_FEE:function(e,t){e.minGasFee=t},SET_FEE_RATE_GOVERNOR:function(e,t){e.feeRateGovernor=t}},U=(r={setAddress:function(e,t){e.dispatch;(0,e.commit)("SET_ADDRESS",{address:t.address,valid:!0})},setTokenAddress:function(e,t){e.dispatch;(0,e.commit)("SET_TOKEN_ADDRESS",t.address)},setWalletName:function(e,t){var n=e.dispatch,r=e.commit,o=t.walletName;r("SET_WALLET_NAME",o),n("common/saveLastUsedWalletName",{walletName:o},{root:!0})},onNetworkChanged:function(e,t){(0,e.commit)("SET_NET_ID",t.netId)},onChainIdChanged:function(e,t){var n=e.commit,r=t.chainId;n("SET_NET_ID",Object(k.hexToNumber)(r))},closeProvider:(K=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.dispatch,t.state,r=t.getters,o=t.commit,c=n.providerName,e.next=4,r.getEthereumProvider();case 4:l=e.sent,e.t0=c,e.next="walletConnect"===e.t0?8:"walletLink"===e.t0?11:"mewConnect"===e.t0?14:17;break;case 8:return e.next=10,l.close();case 10:window.walletProviderForBulksender=void 0;case 11:return e.next=13,l.close();case 13:window.walletLinkForBulksender=void 0;case 14:return e.next=16,l.disconnect();case 16:window.connectMewForBulksender=void 0;case 17:return e.next=19,l.disconnect();case 19:return console.info("Disconnected"),e.abrupt("break",21);case 21:return o("IDENTIFY",null),o("SET_PROVIDER_NAME",""),o("SET_WALLET_NAME",""),e.abrupt("return",!0);case 25:case"end":return e.stop()}}),e)}))),function(e,t){return K.apply(this,arguments)}),getBalance:function(e){e.dispatch;var t=e.state,n=e.getters,r=e.rootGetters,o=n.networkConfig.rpcCallRetryAttempt;return new Promise((function(e,n){var l=function(){var d=Object(c.a)(regeneratorRuntime.mark((function c(d){var m,f,k,h,T;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return m=d.retryAttempt,f=void 0===m?1:m,f++,c.prev=2,c.next=5,r["metamask/connection"]();case 5:return k=c.sent,h=new w.c(t.accountPublicKey),c.next=9,k.getBalance(h);case 9:T=c.sent,e(T),c.next=17;break;case 13:c.prev=13,c.t0=c.catch(2),console.info(c.t0),f>=o?n(c.t0):l({retryAttempt:f});case 17:case"end":return c.stop()}}),c,null,[[2,13]])})));return function(e){return d.apply(this,arguments)}}();l({})}))},getBlockHeight:(W=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.state,t.getters,t.rootGetters,t.rootState,r=t.dispatch,t.commit,o=n.customRPC,l=void 0===o?void 0:o,e.abrupt("return",new Promise((function(e,t){var n=function(){var o=Object(c.a)(regeneratorRuntime.mark((function o(c){var d,m,f,k;return regeneratorRuntime.wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return d=c.retryAttempt,m=void 0===d?1:d,o.prev=1,f={params:{method:"getBlockHeight",params:[]}},l&&(f.customRPC=l),o.next=7,r("metamask/sendRrcRequest",f,{root:!0});case 7:k=o.sent,e(k),o.next=15;break;case 11:o.prev=11,o.t0=o.catch(1),++m>=2?t(o.t0):n({retryAttempt:m});case 15:case"end":return o.stop()}}),o,null,[[1,11]])})));return function(e){return o.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return W.apply(this,arguments)}),checkRPCService:(F=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k,h,T,v;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.state,r=t.getters,t.rootGetters,t.rootState,o=t.dispatch,c=t.commit,l=n.rpcIndex,d=void 0===l?0:l,m=r.networkConfig,f=m.rpcUrl,null==(k=m.backupRpcs)&&(k=[f]),h=[f].concat(k),e.prev=5,d!=h.length){e.next=10;break}return e.abrupt("return",{});case 10:return T=h[d%h.length],e.next=13,o("getBlockHeight",{customRPC:T});case 13:v=e.sent,console.info("Block Height",v),v&&c("SAVE_WORKED_RPC",T);case 16:e.next=22;break;case 18:e.prev=18,e.t0=e.catch(5),d++,o("checkRPCService",{rpcIndex:d});case 22:case"end":return e.stop()}}),e,null,[[5,18]])}))),function(e,t){return F.apply(this,arguments)}),getMinBalanceForTokenAccountActive:function(e){e.dispatch,e.state;var t=e.getters,n=e.rootGetters,r=e.commit,o=t.networkConfig.rpcCallRetryAttempt;return new Promise((function(e,t){var l=function(){var d=Object(c.a)(regeneratorRuntime.mark((function c(d){var m,f,k,h;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return m=d.retryAttempt,f=void 0===m?1:m,f++,c.prev=2,c.next=5,n["metamask/connection"]();case 5:return k=c.sent,c.next=8,E.b.getMinBalanceRentForExemptAccount(k);case 8:h=c.sent,r("SET_MIN_TOKEN_ACCOUNT_INIT_AMOUNT",h),e(h),c.next=17;break;case 13:c.prev=13,c.t0=c.catch(2),console.info(c.t0),f>=o?t(c.t0):l({retryAttempt:f});case 17:case"end":return c.stop()}}),c,null,[[2,13]])})));return function(e){return d.apply(this,arguments)}}();l({})}))},getFeeRateGovernor:function(e){var t=e.dispatch,n=(e.state,e.getters),r=(e.rootGetters,e.commit),o=n.networkConfig.rpcCallRetryAttempt;return new Promise((function(e,n){var l=function(){var d=Object(c.a)(regeneratorRuntime.mark((function c(d){var m,f,k,h;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return m=d.retryAttempt,f=void 0===m?1:m,f++,c.prev=2,k={params:{method:"getFeeRateGovernor",params:[]}},c.next=7,t("metamask/sendRrcRequest",k,{root:!0});case 7:(h=c.sent)&&null!=h&&(r("SET_FEE_RATE_GOVERNOR",h.feeRateGovernor),r("SET_MIN_GAS_FEE",h.feeRateGovernor.minLamportsPerSignature)),e(h),c.next=16;break;case 12:c.prev=12,c.t0=c.catch(2),console.info(c.t0),f>=o?n(c.t0):l({retryAttempt:f});case 16:case"end":return c.stop()}}),c,null,[[2,12]])})));return function(e){return d.apply(this,arguments)}}();l({})}))},getSOLMinDepositBalance:function(e){var t=e.dispatch,n=(e.state,e.getters),r=(e.rootGetters,e.commit),o=n.networkConfig.rpcCallRetryAttempt;return new Promise((function(e,n){var l=function(){var d=Object(c.a)(regeneratorRuntime.mark((function c(d){var m,f,k,h;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return m=d.retryAttempt,f=void 0===m?1:m,f++,c.prev=2,k={params:{method:"getMinimumBalanceForRentExemption",params:[0]}},c.next=7,t("metamask/sendRrcRequest",k,{root:!0});case 7:(h=c.sent)&&null!=h&&r("SET_MIN_DEPOSIT_BALANCE",h),e(h),c.next=16;break;case 12:c.prev=12,c.t0=c.catch(2),console.info(c.t0),f>=o?n(c.t0):l({retryAttempt:f});case 16:case"end":return c.stop()}}),c,null,[[2,12]])})));return function(e){return d.apply(this,arguments)}}();l({})}))},askPermission:function(e,t){var n=e.commit,r=e.dispatch,o=e.getters,l=(e.state,t.providerName),d=t.networkName;return new Promise(function(){var e=Object(c.a)(regeneratorRuntime.mark((function e(t,c){var m,f,h,T,data,v;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n("SET_PROVIDER_NAME",l),n("SET_NETWORK_NAME",d),n("SET_INITIALIZED",!1),e.next=5,o.getEthereumProvider();case 5:if(m=e.sent,f=void 0,e.prev=7,null==m&&(n("SET_WALLET_STATE",-1),c(new Error("Please Install Metamask"))),e.prev=9,"Slope"!=l){e.next=19;break}return e.next=13,m.connect();case 13:h=e.sent,T=h.msg,data=h.data,"ok"===T&&(n("SET_PUBLICKEY",data.publicKey),f=data.publicKey.toString()),e.next=23;break;case 19:return e.next=21,m.connect();case 21:e.sent&&m.publicKey&&(n("SET_PUBLICKEY",m.publicKey),f=m.publicKey.toString());case 23:e.next=27;break;case 25:e.prev=25,e.t0=e.catch(9);case 27:if(console.info("account",f),null!=f){e.next=32;break}return n("SET_WALLET_STATE",-2),c(new Error("lockedMetamask")),e.abrupt("return");case 32:return n("IDENTIFY",f),r("setAddress",{address:f}),n("SET_WALLET_STATE",1),e.prev=35,e.next=38,r("checkRPCService",{});case 38:e.next=43;break;case 40:e.prev=40,e.t1=e.catch(35),console.info(e.t1);case 43:return e.next=45,r("getBalance");case 45:return v=e.sent,v=Object(k.hexToNumberString)(v),r("saveUserBalance",{balance:v}),e.next=50,r("getMinBalanceForTokenAccountActive");case 50:return e.next=52,r("getSOLMinDepositBalance");case 52:return e.next=54,r("getFeeRateGovernor");case 54:try{(window.imToken||window.ethereum.isImToken)&&n("SET_IS_IMTOKEN",!0),null!=window.trustProvider&&n("SET_IS_TRUSTWALLET",!0),m.on&&(m.on("accountsChanged",(function(e){return H({dispatch:r,commit:n,newAccount:e})})),m.on("chainChanged",(function(e){return window.location.reload()})),m.on("networkChanged",(function(e){return r("onNetworkChanged",{netId:e})})),m.on("open",(function(){console.info("open")})),m.on("close",(function(code,e){console.info(code,e)})))}catch(e){console.info(e)}n("SET_INITIALIZED",!0),r("common/saveLastUsedProviderName",{providerName:l},{root:!0}),r("fetchTokenList",{}),r("bulksender/initBaseParams",{},{root:!0}),r("common/initBaseParams",{},{root:!0}),r("token/initBaseParams",{},{root:!0});try{r("fetchCoinPrice")}catch(e){}t({netId:netId,ethAccount:ethAccounts[0]}),e.next=68;break;case 65:e.prev=65,e.t2=e.catch(7),c(e.t2);case 68:case"end":return e.stop()}}),e,null,[[7,65],[9,25],[35,40]])})));return function(t,n){return e.apply(this,arguments)}}())},saveUserBalance:function(e,t){(0,e.commit)("SET_BALANCE",t.balance)},fetchETHBalance:(L=Object(c.a)(regeneratorRuntime.mark((function e(t){var n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.dispatch,t.commit,e.prev=1,e.next=4,n("getBalance");case 4:r=e.sent,r=Object(k.hexToNumberString)(r),n("saveUserBalance",{balance:r}),e.next=11;break;case 9:e.prev=9,e.t0=e.catch(1);case 11:case"end":return e.stop()}}),e,null,[[1,9]])}))),function(e){return L.apply(this,arguments)}),fetchTokenList:(B=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k,h,v,y,A,S,O,x,C,R,I,_,P,D;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.rootState,o=t.commit,c=t.dispatch,l=t.rootGetters,d=t.state,n.oracleIndex,(m=l["metamask/networkConfig"]).smartContractPollTime,m.gasPrice,m.tokenOracleUrls,f=m.currencyName,k=m.networkName,h=m.specialTokenList,(v=r.metamask).netId,v.isFetching,y=v.ethAccount,v.tokens,A=v.balance,S=v.ethCoinName,r.common.language,e.next=7,l["metamask/connection"]();case 7:return O=e.sent,e.prev=8,x=new w.c(y),e.next=12,O.getParsedTokenAccountsByOwner(x,{programId:E.a});case 12:return C=e.sent,R=C.value,I=[],_=["0x0000000000000000000000000000000000000000"].concat(h),e.next=18,c("fetchTokenInfo",{});case 18:P=e.sent,D=k+S,I.push({symbol:f,name:D,balance:Object(T.a)(A).times(Object(T.a)(10).pow(d.decimals)).toString(10),displayBalance:A,contractAddress:"0x0000000000000000000000000000000000000000",decimals:d.decimals,isETH:!0}),R.forEach((function(e,i){var t=e.account.data.parsed.info,n=t.mint,r=t.tokenAmount.decimals,o=t.tokenAmount.amount,c=t.tokenAmount.uiAmountString,l=(t.owner,t.isNative,t.state,P[n.toLowerCase()]);l||(l={symbol:"SPL",name:"SPL Token"});var d={symbol:l.symbol,name:l.name,balance:o,displayBalance:c,contractAddress:n,decimals:r};I.push(d),h.includes(d.contractAddress)||_.push(d.contractAddress)})),I.sort((function(a,b){return _.indexOf(a.contractAddress)-_.indexOf(b.contractAddress)})),o("SAVE_TOKENS",I),o("SET_FETCHING",!1),e.next=32;break;case 27:return e.prev=27,e.t0=e.catch(8),console.info(e.t0),e.next=32,c("setDefaultTokenList");case 32:case"end":return e.stop()}}),e,null,[[8,27]])}))),function(e,t){return B.apply(this,arguments)}),fetchTokenInfo:(j=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k,h,T,v,w,E,A,S,O,x;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.rootState,o=t.commit,c=t.dispatch,l=t.rootGetters,t.state,d=n.oracleIndex,m=void 0===d?0:d,(f=l["metamask/networkConfig"]).smartContractPollTime,k=f.tokenOracleUrls,h=r.metamask,T=h.netId,v=h.ethAccount,h.tokens,e.next=6,l["metamask/connection"]();case 6:if(e.sent,e.prev=7,m!=k.length){e.next=12;break}return e.abrupt("return",{});case 12:return w=k[m%k.length],E=w.indexOf("api.solscan")>-1,A=w.indexOf("cdn.jsdelivr.net")>-1,E&&(w+=v),S={},e.next=19,Object(y.a)(w);case 19:if(200!==(O=e.sent).status){e.next=29;break}return e.next=23,O.json();case 23:return x=e.sent,E?x.forEach((function(e,i){S[e.tokenAddress.toLowerCase()]={symbol:e.tokenSymbol,name:e.tokenName}})):A&&x.tokens.forEach((function(e,i){e.chainId==T&&(S[e.address.toLowerCase()]={symbol:e.symbol,name:e.name})})),o("SAVE_TOKENS_LIST",S),e.abrupt("return",S);case 29:return m++,e.next=32,c("fetchTokenInfo",{oracleIndex:m});case 32:e.next=37;break;case 34:return e.prev=34,e.t0=e.catch(7),e.abrupt("return",{});case 37:case"end":return e.stop()}}),e,null,[[7,34]])}))),function(e,t){return j.apply(this,arguments)}),setDefaultTokenList:(N=Object(c.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l,d,m,f,k,h,v;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=t.rootState,r=t.commit,t.dispatch,o=t.rootGetters,c=t.state,(l=o["metamask/networkConfig"]).smartContractPollTime,l.gasPrice,l.tokenOracleUrls,d=l.currencyName,m=l.networkName,l.specialTokenList,(f=n.metamask).netId,f.isFetching,f.ethAccount,f.tokens,k=f.balance,h=f.ethCoinName,n.common.language,(v=[]).push({symbol:d,name:m+h,balance:Object(T.a)(k).times(Object(T.a)(10).pow(c.decimals)).toString(10),displayBalance:k,contractAddress:"0x0000000000000000000000000000000000000000",decimals:c.decimals,isETH:!0}),r("SAVE_TOKENS",v),r("SET_FETCHING",!1);case 8:case"end":return e.stop()}}),e)}))),function(e){return N.apply(this,arguments)}),fetchGasPrice:(D=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,h,T,v,w,E,y,A,O;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.rootState,o=t.commit,c=t.dispatch,l=t.rootGetters,d=t.state,m=n.oracleIndex,f=void 0===m?0:m,h=l["metamask/networkConfig"],T=h.smartContractPollTime,v=h.gasPrice,w=h.gasOracleUrls,E=r.metamask.netId,!d.gasPriceOracleLocked){e.next=8;break}return console.info("GasPrice Oracle locked"),setTimeout((function(){return c("fetchGasPrice",{})}),1e3*T),e.abrupt("return");case 8:if(e.prev=8,1!==E&&137!==E&&80001!==E){e.next=37;break}return e.next=12,fetch(w[f%w.length]);case 12:if(200!==(y=e.sent).status){e.next=33;break}return e.next=16,y.json();case 16:(A=e.sent).hasOwnProperty("data")&&(A=A.data),O=S({},v),A.slow&&(O.slow=Number(A.slow),Number(A.slow)>Number(Object(k.toWei)("0.001","gwei"))&&(O.slow=Math.ceil(Number(Object(k.fromWei)(Number(A.slow).toString(),"gwei"))))),A.safeLow&&(O.slow=Number(A.safeLow)),A.fast&&(O.fast=Number(A.fast),Number(A.fast)>Number(Object(k.toWei)("0.001","gwei"))&&(O.fast=Math.ceil(Number(Object(k.fromWei)(Number(A.fast).toString(),"gwei"))))),A.standard&&(O.standard=Number(A.standard),Number(A.standard)>Number(Object(k.toWei)("0.001","gwei"))&&(O.standard=Math.ceil(Number(Object(k.fromWei)(Number(A.standard).toString(),"gwei"))))),A.instant&&(O.instant=Number(A.instant)),A.fastest&&(O.instant=Number(A.fastest)),A.rapid&&(O.instant=Number(A.rapid),Number(A.rapid)>Number(Object(k.toWei)("0.001","gwei"))&&(O.instant=Math.ceil(Number(Object(k.fromWei)(Number(A.rapid).toString(),"gwei"))))),O.slow+=1,O.standard+=1,O.fast+=1,o("SAVE_GAS_PRICE",O),e.next=34;break;case 33:throw Error("Fetch gasPrice failed");case 34:setTimeout((function(){return c("fetchGasPrice",{})}),1e3*T),e.next=38;break;case 37:o("SAVE_GAS_PRICE",v);case 38:e.next=45;break;case 40:e.prev=40,e.t0=e.catch(8),console.error(e.t0),f++,setTimeout((function(){return c("fetchGasPrice",{oracleIndex:f})}),1e3*T);case 45:case"end":return e.stop()}}),e,null,[[8,40]])}))),function(e,t){return D.apply(this,arguments)}),updateGasPrice:(P=Object(c.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=t.state,t.getters,t.rootGetters,t.rootState,t.dispatch,r=t.commit,o=n.gasPrices,(c=Object.assign({},o)).fast=40,r("SAVE_GAS_PRICE",c);case 5:case"end":return e.stop()}}),e)}))),function(e){return P.apply(this,arguments)}),fetchCoinPrice:(_=Object(c.a)(regeneratorRuntime.mark((function e(t){var n,r,o,l,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.rootState,r=t.commit,t.dispatch,o=t.rootGetters,t.state,(l=o["metamask/networkConfig"]).smartContractPollTime,d=l.extraFeeOracle,m=l.supportExtraFee,n.metamask.netId,m){e.next=6;break}return r("SET_ETH_PRICE_LOADED",!0),e.abrupt("return");case 6:return e.abrupt("return",new Promise((function(e,t){var n=function(){var o=Object(c.a)(regeneratorRuntime.mark((function o(c){var l,m,f,k,h;return regeneratorRuntime.wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return l=c.retryAttempt,m=void 0===l?1:l,m++,o.prev=2,o.next=5,Object(y.a)(d.coinPriceUrl,{timeout:5e3});case 5:if(200!==(f=o.sent).status){o.next=17;break}return o.next=9,f.json();case 9:k=o.sent,h=0,k.hasOwnProperty(d.coinId)&&(h=k[d.coinId].usd),r("SAVE_ETH_PRICE",h),r("SET_ETH_PRICE_LOADED",!0),e(h),o.next=18;break;case 17:throw Error("Fetch coin price failed");case 18:o.next=23;break;case 20:o.prev=20,o.t0=o.catch(2),m>=2?t(o.t0):n({retryAttempt:m});case 23:case"end":return o.stop()}}),o,null,[[2,20]])})));return function(e){return o.apply(this,arguments)}}();n({})})));case 8:case"end":return e.stop()}}),e)}))),function(e){return _.apply(this,arguments)})},Object(o.a)(r,"updateGasPrice",(I=Object(c.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=t.state,t.getters,t.rootGetters,t.rootState,t.dispatch,r=t.commit,o=n.gasPrices,(c=Object.assign({},o)).fast=40,r("SAVE_GAS_PRICE",c);case 5:case"end":return e.stop()}}),e)}))),function(e){return I.apply(this,arguments)})),Object(o.a)(r,"lockGasPriceOracle",(R=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t.state,t.getters,t.rootGetters,t.rootState,t.dispatch,r=t.commit,o=n.gasPriceOracleLocked,r("SET_GAS_PRICE_ORACLE_LOCKED",o);case 3:case"end":return e.stop()}}),e)}))),function(e,t){return R.apply(this,arguments)})),Object(o.a)(r,"getTransactionReceipt",(C=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,l,d;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.state,t.getters,t.rootGetters,t.rootState,r=t.dispatch,t.commit,o=n.txHash,l=n.customRPC,d=void 0===l?void 0:l,e.abrupt("return",new Promise((function(e,t){var n=function(){var l=Object(c.a)(regeneratorRuntime.mark((function c(l){var m,f,k,h;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return m=l.retryAttempt,f=void 0===m?1:m,f++,c.prev=2,k={params:{method:"getSignatureStatuses",params:[[o],{searchTransactionHistory:!0}]}},d&&(k.customRPC=d),c.next=8,r("metamask/sendRrcRequest",k,{root:!0});case 8:h=c.sent,Array.isArray(h)&&h.length>0&&(h=h[0]),e(h),c.next=16;break;case 13:c.prev=13,c.t0=c.catch(2),f>=2?t(c.t0):n({retryAttempt:f});case 16:case"end":return c.stop()}}),c,null,[[2,13]])})));return function(e){return l.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return C.apply(this,arguments)})),Object(o.a)(r,"getTransactionInfo",(x=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,l,d;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.state,t.getters,t.rootGetters,t.rootState,r=t.dispatch,t.commit,o=n.txHash,l=n.customRPC,d=void 0===l?void 0:l,e.abrupt("return",new Promise((function(e,t){var n=function(){var l=Object(c.a)(regeneratorRuntime.mark((function c(l){var m,f,k,h;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return m=l.retryAttempt,f=void 0===m?1:m,f++,c.prev=2,k={params:{method:"getConfirmedTransaction",params:[o,{encoding:"jsonParsed"}]}},d&&(k.customRPC=d),c.next=8,r("metamask/sendRrcRequest",k,{root:!0});case 8:h=c.sent,Array.isArray(h)&&h.length>0&&(h=h[0]),e(h),c.next=16;break;case 13:c.prev=13,c.t0=c.catch(2),f>=2?t(c.t0):n({retryAttempt:f});case 16:case"end":return c.stop()}}),c,null,[[2,13]])})));return function(e){return l.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return x.apply(this,arguments)})),Object(o.a)(r,"getTransactionCount",(O=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var r,o,address;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.state,t.getters,t.rootGetters,t.rootState,o=t.dispatch,t.commit,address=n.address,e.abrupt("return",new Promise((function(e,t){var n=function(){var l=Object(c.a)(regeneratorRuntime.mark((function c(l){var d,m,f,k;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return d=l.retryAttempt,m=void 0===d?1:d,m++,c.prev=2,f={from:r.ethAccount,method:"eth_getTransactionCount",params:[address,"latest"]},c.next=6,o("metamask/sendAsync",f,{root:!0});case 6:k=c.sent,e(k),c.next=13;break;case 10:c.prev=10,c.t0=c.catch(2),m>=2?t(c.t0):n({retryAttempt:m});case 13:case"end":return c.stop()}}),c,null,[[2,10]])})));return function(e){return l.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return O.apply(this,arguments)})),Object(o.a)(r,"sendAsync",(function(e,t){var n=e.state,r=e.getters,o=(e.rootState,t.method),l=t.from,d=t.params;switch(r.netId){case 77:case 99:break;case 100:l=void 0}return new Promise(function(){var e=Object(c.a)(regeneratorRuntime.mark((function e(t,c){var m,f,k,h,T,v,w,E,y;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.getEthereumProvider();case 2:if(m=e.sent,!1,"walletConnect"!=n.providerName){e.next=54;break}return e.prev=5,e.next=8,m.getWalletConnector();case 8:return f=e.sent,e.next=11,r.web3();case 11:if(e.sent,"eth_sendTransaction"!=o){e.next=19;break}return k=d[0],e.next=16,f.sendTransaction(k);case 16:h=e.sent,console.info(h),t(h);case 19:if("eth_signTransaction"!=o){e.next=24;break}return e.next=22,f.signTransaction(txParam);case 22:T=e.sent,t(T);case 24:if("eth_signTypedData_v3"!=o){e.next=33;break}return d=[d[0],d[1]],e.next=28,f.signTypedData(d);case 28:v=e.sent,console.info(v),t(v),e.next=37;break;case 33:return e.next=35,m.send({id:1314,method:o,params:d,jsonrpc:"2.0",from:l});case 35:(w=e.sent)?t(w):c("get result by walletConnect failed");case 37:e.next=52;break;case 39:return e.prev=39,e.t0=e.catch(5),console.info(e.t0,o),e.prev=42,e.next=45,m.send({id:1314,method:o,params:d,jsonrpc:"2.0"});case 45:(E=e.sent)?t(E):c("Send RPC by walletConnect failed"),e.next=52;break;case 49:e.prev=49,e.t1=e.catch(42),c("Send RPC by walletConnect failed");case 52:e.next=57;break;case 54:y={id:520,method:o,params:d,jsonrpc:"2.0"},console.info(y),m.request(y).then((function(e){t(e)})).catch((function(e){c(e)}));case 57:case"end":return e.stop()}}),e,null,[[5,39],[42,49]])})));return function(t,n){return e.apply(this,arguments)}}())})),Object(o.a)(r,"sendRrcRequest",(function(e,t){e.state;var n=e.getters,r=(e.rootState,t.params),o=t.customRPC,l=void 0===o?void 0:o,d=n.networkConfig.rpcUrl;return l&&(d=l),new Promise(function(){var e=Object(c.a)(regeneratorRuntime.mark((function e(t,n){var o,c,l,m,data,f,k,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,o=parseInt(Date.parse(new Date)),c=!1,Array.isArray(r)?(c=!0,l=[],m=0,r.forEach((function(param,i){param.hasOwnProperty("id")||(param.id=o+m,m+=1),param.jsonrpc="2.0",l.push(param)})),r=l):(r.hasOwnProperty("id")||(r.id=o),r.jsonrpc="2.0"),data=JSON.stringify(r),e.next=7,Object(y.a)(d,{body:data,headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST"});case 7:return f=e.sent,e.next=10,f.json();case 10:(k=e.sent).error?n(k.error):c?(h=[],k.forEach((function(e,i){e.error?h.push(e.error):null===e.result.value||null!=e.result.value?h.push(e.result.value):h.push(e.result)})),t(h)):null===k.result.value||null!=k.result.value?t(k.result.value):t(k.result),e.next=17;break;case 14:e.prev=14,e.t0=e.catch(0),n(e.t0);case 17:case"end":return e.stop()}}),e,null,[[0,14]])})));return function(t,n){return e.apply(this,arguments)}}())})),r);t.default={namespaced:!0,state:function(){return{ethAccount:null,accountPublicKey:null,netId:101,currency:"ETH",domainData:{},balance:"0",initialized:!1,address:{value:null,valid:!1},gasPrice:{fast:1,low:1,standard:1,instant:1},gasPriceOracleLocked:!1,providerName:"",networkName:"",tokens:[],tokensForTestnet:[],tokenAddress:"",isFetching:!0,ethCoinName:" Native Currency",walletState:1,isImToken:!1,isTrustWallet:!1,isMetamask:!0,walletName:"",ethPrice:0,ethPriceLoaded:!1,decimals:9,minTokenAccountInitAmount:2039280,minGasFee:5e3,feeRateGovernor:{burnPercent:50,maxLamportsPerSignature:1e5,minLamportsPerSignature:5e3,targetLamportsPerSignature:1e4,targetSignaturesPerSlot:2e4},tokensList:{},minDeposiBalance:890880,workedRPC:void 0}},getters:G,mutations:M,actions:U}},922:function(e,t,n){"use strict";n.r(t);n(90),n(67),n(78),n(96),n(30),n(44),n(34);var r,o,c,l,d,m,f,k,h,T,v,w,E,y,A,S,O,x,C,R,I,_,P,D,N,j,B,L,F,W=n(1),K=(n(74),n(75),n(29),n(10)),H=n(439),G=n(440),M=n(6),U=n(20),V=n(4),Y=n(38),Q=(n(236),n(118)),X={allowanceNumber:function(e){var t=0;try{t=Object(V.a)(e.allowance).gte(Object(V.a)(Math.pow(10,36)))?-1:Object(V.a)(e.allowance).div(Object(V.a)(10).pow(e.tokenSelected.decimals)).toString(10)}catch(e){console.info(e)}return t},balanceNumber:function(e){var t=0;try{t=Object(V.a)(e.balance).div(Object(V.a)(10).pow(e.tokenSelected.decimals)).toString(10)}catch(e){}return t},isNFTToken:function(e,t){return t.isERC721||t.isERC1155},isERC721:function(e){return 1==e.tokenType},isERC1155:function(e){return 2==e.tokenType},tokenInstance:function(e,t,n,r){return Object(W.a)(regeneratorRuntime.mark((function t(){var o,c,l;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return o=n.metamask,c=o.ethAccount,o.netId,t.next=3,r["metamask/web3"]();case 3:return l=t.sent,t.abrupt("return",new l.eth.Contract(H,e.address,{from:c}));case 5:case"end":return t.stop()}}),t)})))},tokenQueryInstance:function(e,t,n,r){return Object(W.a)(regeneratorRuntime.mark((function e(){var t,o,c,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.metamask,o=t.ethAccount,t.netId,e.next=3,r["metamask/web3"]();case 3:return c=e.sent,l=r["metamask/networkConfig"].tokenQueryContract,e.abrupt("return",new c.eth.Contract(G,l,{from:o}));case 6:case"end":return e.stop()}}),e)})))}},J={setTokenAddress:function(e,t){e.dispatch;(0,e.commit)("SET_TOKEN_ADDRESS",t.address)},setAproveTx:function(e,t){e.dispatch;(0,e.commit)("SET_TOKEN_APPROVE_TX",t.txHash)},setAproveAmount:function(e,t){e.dispatch;(0,e.commit)("SET_TOKEN_APPROVE_AMOUNT",t.amount)},setAproveTxStatus:function(e,t){e.dispatch;(0,e.commit)("SET_TOKEN_APPROVE_TX_STATUS",t.status)},setTokenSelectedDisplayInfo:function(e,t){e.dispatch;(0,e.commit)("SET_TOKEN_SELECTED_DISPLAY_INFO",t.tokenSelectedDisplayInfo)},setTokenSelected:(F=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.dispatch,o=t.commit,c=t.state,l=n.selected,o("SET_TOKEN_SELECTED",l),o("SET_TOKEN_INFO_LOADED",!0),c.tokenSelected.isETH?o("SET_TOKEN_TYPE",0):(r("getTokenAllowce",{}),r("getTokenBalance",{})),e.prev=5,e.next=8,r("common/getNetIdStorage",{},{root:!0});case 8:(d=e.sent).lastTokenUsed=l,r("common/updateNetIdStorage",{netStorage:d},{root:!0}),e.next=15;break;case 13:e.prev=13,e.t0=e.catch(5);case 15:case"end":return e.stop()}}),e,null,[[5,13]])}))),function(e,t){return F.apply(this,arguments)}),checkLastTokenSelected:(L=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.dispatch,r=t.commit,t.state,o=null,e.prev=2,e.next=5,n("common/getNetIdStorage",{},{root:!0});case 5:c=e.sent,o=c.lastTokenUsed,e.next=11;break;case 9:e.prev=9,e.t0=e.catch(2);case 11:return r("SET_TOKEN_SELECTED",o),e.abrupt("return",o);case 13:case"end":return e.stop()}}),e,null,[[2,9]])}))),function(e){return L.apply(this,arguments)}),setTokenBalance:function(e,t){e.dispatch;var n=e.commit,r=(e.state,t.balance);n("SET_TOKEN_BALANCE",r),n("SET_TOKEN_BALANCE_LOADED",!0),console.info("Token Balance",r)},setTokenAllowance:function(e,t){e.dispatch;var n=e.commit,r=(e.state,t.allowance);-1!=r&&(n("SET_TOKEN_ALLOWANCE",r),n("SET_TOKEN_ALLOWANCE_LOADED",!0),console.info("Token Allowance",r))},clearUsedParams:(B=Object(W.a)(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t.state,t.getters,t.dispatch,n=t.commit,t.rootState,n("CLEAR");case 2:case"end":return e.stop()}}),e)}))),function(e){return B.apply(this,arguments)}),initBaseParams:(j=Object(W.a)(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t.rootState,t.rootGetters,n=t.dispatch,t.commit,t.state,n("checkLastTokenSelected");case 2:case"end":return e.stop()}}),e)}))),function(e){return j.apply(this,arguments)}),checkAllowceEnough:(N=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.state,o=t.getters,c=t.commit,l=t.rootState,d=n.finalAmount,m=null!=r.tokenSelected&&r.tokenSelected.isETH||null!=r.tokenSelected&&null!=r.tokenSelected.decimals&&r.allowance>0&&Object(V.a)(r.allowance).div(Object(V.a)(10).pow(r.tokenSelected.decimals)).gte(Object(V.a)(d)),o.isERC721&&(f=l.common.addressInfo,null!=r.tokenSelected.decimals&&(m=r.allowance>0&&Object(V.a)(r.allowance).div(Object(V.a)(10).pow(r.tokenSelected.decimals)).gte(Object(V.a)(f.finalData.length)))),c("SET_TOKEN_ALLOWANCE_ENOUGH",m),e.abrupt("return",m);case 6:case"end":return e.stop()}}),e)}))),function(e,t){return N.apply(this,arguments)}),checkBalanceEnough:(D=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.state,o=t.getters,c=t.commit,l=t.rootState,d=n.finalAmount,m=l.metamask.balance,f=r.tokenSelected,k=!1,null!=f&&(f.isETH?k=Object(V.a)(m).gte(Object(V.a)(d)):(o.isERC721&&(h=l.common.addressInfo,k=Object(V.a)(r.balance).div(Object(V.a)(10).pow(r.tokenSelected.decimals)).gte(Object(V.a)(h.finalData.length))),o.isERC1155?k=!0:null!=f.decimals&&(k=Object(V.a)(r.balance).div(Object(V.a)(10).pow(r.tokenSelected.decimals)).gte(Object(V.a)(d))))),c("SET_TOKEN_BALANCE_ENOUGH",k),e.abrupt("return",k);case 8:case"end":return e.stop()}}),e)}))),function(e,t){return D.apply(this,arguments)}),getTokenAddress:(P=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.state,n=t.getters,r=t.commit,e.next=3,n.tokenInstance();case 3:o=e.sent,r("SET_TOKEN_ADDRESS",o._address);case 5:case"end":return e.stop()}}),e)}))),function(e){return P.apply(this,arguments)}),getTokenBalance:(_=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.dispatch,r=t.state,t.getters,o=t.rootGetters,c=t.rootState,(0,t.commit)("SET_TOKEN_BALANCE_LOADED",!1),l=o["metamask/networkConfig"].rpcCallRetryAttempt,e.abrupt("return",new Promise((function(e,t){var d=function(){var m=Object(W.a)(regeneratorRuntime.mark((function m(f){var k,h,T,v,w,E,y,A,S,O,x,C;return regeneratorRuntime.wrap((function(m){for(;;)switch(m.prev=m.next){case 0:return k=f.retryAttempt,h=void 0===k?1:k,h++,m.prev=2,(T=c.metamask).ethAccount,v=T.accountPublicKey,v=new M.c(v),m.next=7,o["metamask/connection"]();case 7:return w=m.sent,E=r.address,y=new M.c(E),A=new U.b(w,y,U.a,v),m.next=13,U.b.getAssociatedTokenAddress(A.associatedProgramId,A.programId,A.publicKey,v);case 13:return S=m.sent,m.next=16,w.getAccountInfo(S);case 16:if(null!=m.sent){m.next=20;break}return e({}),m.abrupt("return");case 20:return m.next=22,w.getTokenAccountBalance(S);case 22:O=m.sent,x=O.value,C=0,null!=x&&null!=x&&(C=x.amount),n("setTokenBalance",{balance:C}),e(C),m.next=33;break;case 30:m.prev=30,m.t0=m.catch(2),h>=l||"execution reverted"==m.t0.message?t(m.t0):d({retryAttempt:h});case 33:case"end":return m.stop()}}),m,null,[[2,30]])})));return function(e){return m.apply(this,arguments)}}();d({})})));case 4:case"end":return e.stop()}}),e)}))),function(e){return _.apply(this,arguments)}),parseInsertTokenAddress:(I=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.dispatch,t.state,t.getters,t.rootGetters,t.rootState,o=t.commit,c=n.tokenAddress,!Object(Y.a)(c)){e.next=24;break}return o("SET_TOKEN_ADDRESS",c),e.next=6,r("getTokenInfo");case 6:if(l=e.sent,0!=Object.keys(l).length){e.next=23;break}return e.next=10,r("checkTokenType");case 10:d=e.sent,console.info("TokenType2",d),e.t0=d,e.next=1===e.t0?15:2===e.t0?19:23;break;case 15:return e.next=17,r("getERC721TokenInfo");case 17:return l=e.sent,e.abrupt("break",23);case 19:return e.next=21,r("getERC1155TokenInfo");case 21:return l=e.sent,e.abrupt("break",23);case 23:return e.abrupt("return",l);case 24:case"end":return e.stop()}}),e)}))),function(e,t){return I.apply(this,arguments)}),fetchTokenPrice:(R=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l,d,m,f,k,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.rootState,r=t.commit,o=t.dispatch,c=t.rootGetters,l=t.state,r("SET_PRICE_LOADED",!1),(d=c["metamask/networkConfig"]).smartContractPollTime,d.extraFeeOracle,m=d.supportExtraFee,n.metamask.netId,m){e.next=7;break}return r("SET_PRICE_LOADED",!0),e.abrupt("return");case 7:return e.next=9,o("bulksender/setExtraFee",{extraFee:0},{root:!0});case 9:if(r("SET_TOKEN_PRICE",0),"0x0000000000000000000000000000000000000000"!=(f=l.address)){e.next=14;break}return r("SET_PRICE_LOADED",!0),e.abrupt("return");case 14:if(k=f,!(h=c["metamask/networkConfig"].specialTokenList).includes(f)&&!h.includes(k)){e.next=21;break}return r("SET_TOKEN_PRICE",1),r("SET_PRICE_LOADED",!0),e.abrupt("return");case 21:return e.abrupt("return");case 24:case"end":return e.stop()}}),e)}))),function(e){return R.apply(this,arguments)}),getTokenInfo:(C=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.dispatch,r=t.state,t.getters,o=t.rootGetters,c=t.rootState,l=t.commit,d=o["metamask/networkConfig"],m=d.rpcCallRetryAttempt,d.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var d=function(){var t=Object(W.a)(regeneratorRuntime.mark((function t(f){var k,h,T,v,w,E,y,A,S,O,x,C,R,I,_,P,D;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return k=f.retryAttempt,h=void 0===k?1:k,h++,t.prev=2,(T=c.metamask).ethAccount,v=T.accountPublicKey,w=T.tokensList,v=new M.c(v),t.next=7,o["metamask/connection"]();case 7:return E=t.sent,y=r.address,A=new M.c(y),S=new U.b(E,A,U.a,v),(O=w[r.address.toLowerCase()])||(O={symbol:"SPL",name:"SPL Token"}),x={},t.next=16,E.getTokenSupply(S.publicKey);case 16:return C=t.sent,x={contractAddress:r.address,balance:0,name:O.name,symbol:O.symbol,decimals:C.value.decimals},t.next=20,n("setTokenSelected",{selected:x});case 20:return t.next=22,U.b.getAssociatedTokenAddress(S.associatedProgramId,S.programId,S.publicKey,v);case 22:return R=t.sent,I=0,_=r.unlimitedApproveAmount,t.prev=25,t.next=28,E.getTokenAccountBalance(R);case 28:P=t.sent,D=P.value,console.info(D),null==D?x={contractAddress:r.address,balance:0,name:"Error Token",symbol:"Error Token",decimals:0}:(I=D.amount,x={contractAddress:r.address,balance:D.amount,name:x.name,symbol:x.symbol,decimals:D.decimals}),t.next=36;break;case 34:t.prev=34,t.t0=t.catch(25);case 36:n("setTokenSelected",{selected:x}),n("setTokenBalance",{balance:I}),n("setTokenAllowance",{allowance:_}),l("SET_TOKEN_TYPE",3),e(x),t.next=47;break;case 43:t.prev=43,t.t1=t.catch(2),console.info("get Token Info exception",t.t1),h>=m||"execution reverted"==t.t1.message?e({}):d({retryAttempt:h});case 47:case"end":return t.stop()}}),t,null,[[2,43],[25,34]])})));return function(e){return t.apply(this,arguments)}}();d({})})));case 3:case"end":return e.stop()}}),e)}))),function(e){return C.apply(this,arguments)}),getERC721TokenInfo:(x=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.dispatch,r=t.state,o=t.getters,c=t.rootGetters,l=t.rootState,t.commit,d=c["metamask/networkConfig"],m=d.rpcCallRetryAttempt,d.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var c=function(){var t=Object(W.a)(regeneratorRuntime.mark((function t(d){var f,k,h,T,data,v,w,E,y,symbol,A,S,O;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return f=d.retryAttempt,k=void 0===f?1:f,k++,t.prev=2,h=l.metamask.ethAccount,l.bulksender.bulksenderAddress,t.next=7,o.tokenQueryInstance();case 7:return T=t.sent,data=T.methods.queryERC721TokenInfo(r.address,h).encodeABI(),v={method:"eth_call",params:[{from:h,to:T._address,data:data},"latest"],from:h},t.next=12,n("metamask/sendAsync",v,{root:!0});case 12:if(null==(w=t.sent)){t.next=21;break}E=Q.decodeParameters([{name:"name",type:"string"},{name:"symbol",type:"string"},{name:"decimals",type:"uint256"},{name:"totalSupply",type:"uint256"},{name:"balance",type:"uint256"},{name:"allowance",type:"uint256"}],w),y=E.name,symbol=E.symbol,A=E.decimals,E.totalSupply,S=E.balance,E.allowance,O={contractAddress:r.address,balance:S,name:y,symbol:symbol,decimals:A},n("setTokenSelected",{selected:O}),n("setTokenBalance",{balance:S}),e(O),t.next=22;break;case 21:throw Error("Fetch token info failed");case 22:t.next=27;break;case 24:t.prev=24,t.t0=t.catch(2),k>=m?e({}):c({retryAttempt:k});case 27:case"end":return t.stop()}}),t,null,[[2,24]])})));return function(e){return t.apply(this,arguments)}}();c({})})));case 3:case"end":return e.stop()}}),e)}))),function(e){return x.apply(this,arguments)}),getERC1155TokenInfo:(O=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.dispatch,r=t.state,o=t.getters,c=t.rootGetters,l=t.rootState,t.commit,d=c["metamask/networkConfig"],m=d.rpcCallRetryAttempt,d.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var c=function(){var t=Object(W.a)(regeneratorRuntime.mark((function t(d){var f,k,h,T,symbol,v;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return f=d.retryAttempt,k=void 0===f?1:f,k++,t.prev=2,l.metamask.ethAccount,l.bulksender.bulksenderAddress,t.next=7,o.tokenQueryInstance();case 7:return t.sent,t.next=10,n("getBaseNFTTokenInfo");case 10:h=t.sent,T=h.name,symbol=h.symbol,console.info(T),v={contractAddress:r.address,balance:0,name:T,symbol:symbol,decimals:0},n("setTokenSelected",{selected:v}),n("setTokenBalance",{balance:0}),e(v),t.next=24;break;case 21:t.prev=21,t.t0=t.catch(2),k>=m?e({}):c({retryAttempt:k});case 24:case"end":return t.stop()}}),t,null,[[2,21]])})));return function(e){return t.apply(this,arguments)}}();c({})})));case 3:case"end":return e.stop()}}),e)}))),function(e){return O.apply(this,arguments)}),getBaseNFTTokenInfo:(S=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.dispatch,r=t.state,o=t.getters,c=t.rootGetters,l=t.rootState,t.commit,d=c["metamask/networkConfig"],m=d.rpcCallRetryAttempt,d.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var c=function(){var t=Object(W.a)(regeneratorRuntime.mark((function t(d){var f,k,h,T,data,v,w,E,y,symbol;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return f=d.retryAttempt,k=void 0===f?1:f,k++,t.prev=2,h=l.metamask.ethAccount,l.bulksender.bulksenderAddress,t.next=7,o.tokenQueryInstance();case 7:return T=t.sent,data=T.methods.queryERC721TokenBaseInfo(r.address).encodeABI(),v={method:"eth_call",params:[{from:h,to:T._address,data:data},"latest"],from:h},t.next=12,n("metamask/sendAsync",v,{root:!0});case 12:if(null==(w=t.sent)){t.next=18;break}E=Q.decodeParameters([{name:"name",type:"string"},{name:"symbol",type:"string"}],w),y=E.name,symbol=E.symbol,e({name:y,symbol:symbol}),t.next=19;break;case 18:throw Error("Fetch token info failed");case 19:t.next=24;break;case 21:t.prev=21,t.t0=t.catch(2),k>=m||"execution reverted"==t.t0.message?e({name:"NFT-ERC1155",symbol:"ERC1155"}):c({retryAttempt:k});case 24:case"end":return t.stop()}}),t,null,[[2,21]])})));return function(e){return t.apply(this,arguments)}}();c({})})));case 3:case"end":return e.stop()}}),e)}))),function(e){return S.apply(this,arguments)}),checkTokenType:(A=Object(W.a)(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.dispatch,t.state,t.getters,t.rootGetters,t.rootState,(0,t.commit)("SET_TOKEN_TYPE",3),e.abrupt("return",3);case 3:case"end":return e.stop()}}),e)}))),function(e){return A.apply(this,arguments)}),checkNFTType:(y=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.dispatch,t.state,o=t.getters,c=t.rootGetters,l=t.rootState,t.commit,d=n.isERC721,m=c["metamask/networkConfig"],f=m.rpcCallRetryAttempt,m.tokenQueryContract,m.supportsNFT,e.abrupt("return",new Promise((function(e,t){var n=function(){var t=Object(W.a)(regeneratorRuntime.mark((function t(c){var m,k,h,T,v,w,data,E;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return m=c.retryAttempt,k=void 0===m?1:m,k++,t.prev=2,h=!1,T=l.metamask.ethAccount,t.next=7,o.tokenInstance();case 7:return v=t.sent,w="0xd9b67a26",d&&(w="0x80ac58cd"),data=v.methods.supportsInterface(w).encodeABI(),E={method:"eth_call",params:[{from:T,to:v._address,data:data},"latest"],from:T},t.next=14,r("metamask/sendAsync",E,{root:!0});case 14:h=t.sent,h=Object(K.hexToNumberString)(h),e(h="1"==h||1==h),t.next=24;break;case 20:t.prev=20,t.t0=t.catch(2),console.info("Check token type again:",t.t0),k>=f||"execution reverted"==t.t0.message?e(!1):n({retryAttempt:k});case 24:case"end":return t.stop()}}),t,null,[[2,20]])})));return function(e){return t.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return y.apply(this,arguments)}),bulkQueryTokenAccounts:(E=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.dispatch,o=t.state,t.getters,c=t.rootGetters,l=t.rootState,t.commit,n.tokenAddress,d=n.addresses,n.tokenIds,m=c["metamask/networkConfig"],f=m.rpcCallRetryAttempt,m.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var n=function(){var m=Object(W.a)(regeneratorRuntime.mark((function m(k){var h,T,v,w,E,y,A,address,S,O,x,C,R,I,_,P,D,N,j;return regeneratorRuntime.wrap((function(m){for(;;)switch(m.prev=m.next){case 0:return h=k.retryAttempt,T=void 0===h?1:h,T++,m.prev=2,v=l.metamask.accountPublicKey,v=new M.c(v),m.next=7,c["metamask/connection"]();case 7:if(w=m.sent,E=[],y=[],!o.tokenSelected.isETH){m.next=14;break}for(A=0;A<d.length;A++)address=d[A],S=new M.c(address),O=S,y.push(O),E.push({method:"getAccountInfo",params:[O.toString(),{encoding:"jsonParsed"}]});m.next=29;break;case 14:x=o.address,C=new M.c(x),R=new U.b(w,C,U.a,v),A=0;case 18:if(!(A<d.length)){m.next=29;break}return I=d[A],_=new M.c(I),m.next=23,U.b.getAssociatedTokenAddress(R.associatedProgramId,R.programId,R.publicKey,_);case 23:P=m.sent,y.push(P),E.push({method:"getAccountInfo",params:[P.toString(),{encoding:"jsonParsed"}]});case 26:A++,m.next=18;break;case 29:return D={params:E},m.next=32,r("metamask/sendRrcRequest",D,{root:!0});case 32:N=m.sent,j=[],N.forEach((function(e,i){if(null==e)j.push({isNew:!0,tokenAccount:y[i]});else{if(!e.hasOwnProperty("owner"))throw Error("Query accounts failed");j.push({isNew:!1,tokenAccount:y[i]})}})),e(j),m.next=42;break;case 38:m.prev=38,m.t0=m.catch(2),console.info(m.t0),T>=f?t(m.t0):n({retryAttempt:T});case 42:case"end":return m.stop()}}),m,null,[[2,38]])})));return function(e){return m.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return E.apply(this,arguments)}),bulkFindBadTokenAccounts:(w=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.dispatch,r=t.state,t.getters,o=t.rootGetters,c=t.rootState,t.commit,n.tokenAddress,l=n.addresses,d=o["metamask/networkConfig"],m=d.rpcCallRetryAttempt,d.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var n=function(){var d=Object(W.a)(regeneratorRuntime.mark((function d(f){var k,h,T,v,w,E,y,A,S,address,O;return regeneratorRuntime.wrap((function(d){for(;;)switch(d.prev=d.next){case 0:return k=f.retryAttempt,h=void 0===k?1:k,h++,d.prev=2,T=c.metamask.accountPublicKey,T=new M.c(T),d.next=7,o["metamask/connection"]();case 7:if(v=d.sent,w=[],r.tokenSelected.isETH){d.next=30;break}E=r.address,y=new M.c(E),A=new U.b(v,y,U.a,T),S=0;case 15:if(!(S<l.length)){d.next=30;break}return address=l[S],O=new M.c(address),d.prev=18,d.next=21,U.b.getAssociatedTokenAddress(A.associatedProgramId,A.programId,A.publicKey,O);case 21:w.push("0x0000000000000000000000000000000000000000"),d.next=27;break;case 24:d.prev=24,d.t0=d.catch(18),w.push(address);case 27:S++,d.next=15;break;case 30:e(w),d.next=36;break;case 33:d.prev=33,d.t1=d.catch(2),h>=m?t(d.t1):n({retryAttempt:h});case 36:case"end":return d.stop()}}),d,null,[[2,33],[18,24]])})));return function(e){return d.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return w.apply(this,arguments)}),bulkQueryBalances:(v=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.dispatch,t.state,o=t.getters,c=t.rootGetters,l=t.rootState,t.commit,d=n.tokenAddress,m=n.addresses,f=n.tokenIds,k=c["metamask/networkConfig"],h=k.rpcCallRetryAttempt,k.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var n=function(){var c=Object(W.a)(regeneratorRuntime.mark((function c(k){var T,v,w,E,data,y,A,S,O;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return T=k.retryAttempt,v=void 0===T?1:T,v++,c.prev=2,w=l.metamask.ethAccount,c.next=6,o.tokenQueryInstance();case 6:return E=c.sent,data=o.isERC1155?E.methods.bulkQueryERC1155Balances(d,m,f).encodeABI():E.methods.bulkQueryBalances(d,m).encodeABI(),y={method:"eth_call",params:[{from:w,to:E._address,data:data},"latest"],from:w},c.next=11,r("metamask/sendAsync",y,{root:!0});case 11:if(null==(A=c.sent)){c.next=17;break}S=Q.decodeParameters([{name:"balances",type:"uint256[]"}],A),O=S.balances,e(O),c.next=18;break;case 17:throw Error("BulkQueryBalances failed");case 18:c.next=23;break;case 20:c.prev=20,c.t0=c.catch(2),v>=h?t(c.t0):n({retryAttempt:v});case 23:case"end":return c.stop()}}),c,null,[[2,20]])})));return function(e){return c.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return v.apply(this,arguments)}),checkApproveTransactionStatus:(T=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l,d,m,f,k;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.state,t.getters,r=t.rootGetters,t.rootState,o=t.dispatch,c=t.commit,l=n.approveTx,d=n.approveAmount,m=r["metamask/networkConfig"].smartContractShortPollTime,e.prev=4,e.next=7,o("metamask/getTransactionReceipt",{txHash:l},{root:!0});case 7:null!=(f=e.sent)?(k=f.status,c("SET_TOKEN_APPROVE_TX_STATUS",k="0x1"==k||1==k?1:-2),c("SET_TOKEN_ALLOWANCE",d)):setTimeout((function(){o("checkApproveTransactionStatus")}),1e3*m),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(4),setTimeout((function(){o("checkApproveTransactionStatus")}),1e3*m);case 14:case"end":return e.stop()}}),e,null,[[4,11]])}))),function(e){return T.apply(this,arguments)}),getTokenAllowce:(h=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c,l,d;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.rootState,t.getters,n=t.commit,r=t.dispatch,o=t.rootGetters,c=t.state,n("SET_TOKEN_ALLOWANCE_LOADED",!1),l=o["metamask/networkConfig"],d=l.rpcCallRetryAttempt,l.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var n=function(){var t=Object(W.a)(regeneratorRuntime.mark((function t(o){var l,m,f;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:l=o.retryAttempt,m=void 0===l?1:l,m++;try{f=c.unlimitedApproveAmount,r("setTokenAllowance",{allowance:f}),e(f)}catch(t){m>=d||"execution reverted"==t.message?e(0):n({retryAttempt:m})}case 3:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e){return h.apply(this,arguments)}),approveForBulksender:(k=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.state,t.getters,o=t.rootState,t.rootGetters,c=t.dispatch,t.commit,(l=n.amount)!=r.unlimitedApproveAmount&&(l=Object(V.a)(l).times(Object(V.a)(10).pow(parseInt(r.tokenSelected.decimals))).toString(10)),d=o.bulksender.bulksenderAddress,e.next=6,c("approve",{bulksenderAddress:d,amount:l});case 6:return m=e.sent,e.abrupt("return",m);case 8:case"end":return e.stop()}}),e)}))),function(e,t){return k.apply(this,arguments)}),approveForBulksenderForNFTToken:(f=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.state,t.getters,o=t.rootState,t.rootGetters,c=t.dispatch,t.commit,n.amount,d=o.bulksender.bulksenderAddress,l=r.unlimitedApproveAmount,e.next=7,c("_approveForNFTToken",{bulksenderAddress:d,setApproveAll:!0,amount:l});case 7:return m=e.sent,e.abrupt("return",m);case 9:case"end":return e.stop()}}),e)}))),function(e,t){return f.apply(this,arguments)}),revokeApproveOfBulksenderForNFTToken:(m=Object(W.a)(regeneratorRuntime.mark((function e(t){var n,r,o,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.state,t.getters,n=t.rootState,t.rootGetters,r=t.dispatch,t.commit,o=n.bulksender.bulksenderAddress,e.next=6,r("_approveForNFTToken",{bulksenderAddress:o,setApproveAll:!1,amount:0});case 6:return c=e.sent,e.abrupt("return",c);case 8:case"end":return e.stop()}}),e)}))),function(e){return m.apply(this,arguments)}),checkAddressIsContract:(d=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.dispatch,t.state,o=t.getters,c=t.rootGetters,l=t.rootState,t.commit,d=n.addresses,m=c["metamask/networkConfig"],f=m.rpcCallRetryAttempt,m.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var n=function(){var c=Object(W.a)(regeneratorRuntime.mark((function c(m){var k,h,T,v,data,w,E,y,A;return regeneratorRuntime.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:return k=m.retryAttempt,h=void 0===k?1:k,h++,c.prev=2,T=l.metamask.ethAccount,c.next=6,o.tokenQueryInstance();case 6:return v=c.sent,data=v.methods.bulkCheckIfContracts(d).encodeABI(),w={method:"eth_call",params:[{from:T,to:v._address,data:data},"latest"],from:T},c.next=11,r("metamask/sendAsync",w,{root:!0});case 11:if(null==(E=c.sent)){c.next=17;break}y=Q.decodeParameters([{name:"contracts",type:"address[]"}],E),A=y.contracts,e(A),c.next=18;break;case 17:throw Error("bulkCheckIfContracts failed");case 18:c.next=23;break;case 20:c.prev=20,c.t0=c.catch(2),h>=f?t(c.t0):n({retryAttempt:h});case 23:case"end":return c.stop()}}),c,null,[[2,20]])})));return function(e){return c.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return d.apply(this,arguments)}),checkTokenOwners:(l=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.dispatch,o=t.state,c=t.getters,l=t.rootGetters,d=t.rootState,t.commit,m=n.tokenIds,f=l["metamask/networkConfig"],k=f.rpcCallRetryAttempt,f.tokenQueryContract,e.abrupt("return",new Promise((function(e,t){var n=function(){var l=Object(W.a)(regeneratorRuntime.mark((function l(f){var h,T,v,w,data,E,y,A,S;return regeneratorRuntime.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return h=f.retryAttempt,T=void 0===h?1:h,T++,l.prev=2,v=d.metamask.ethAccount,l.next=6,c.tokenQueryInstance();case 6:return w=l.sent,data=w.methods.bulkQueryERC721Owers(o.address,m).encodeABI(),E={method:"eth_call",params:[{from:v,to:w._address,data:data},"latest"],from:v},l.next=11,r("metamask/sendAsync",E,{root:!0});case 11:if(null==(y=l.sent)){l.next=17;break}A=Q.decodeParameters([{name:"addrOwners",type:"address[]"}],y),S=A.addrOwners,e(S),l.next=18;break;case 17:throw Error("bulkCheckIfContracts failed");case 18:l.next=23;break;case 20:l.prev=20,l.t0=l.catch(2),T>=k?t(l.t0):n({retryAttempt:T});case 23:case"end":return l.stop()}}),l,null,[[2,20]])})));return function(e){return l.apply(this,arguments)}}();n({})})));case 4:case"end":return e.stop()}}),e)}))),function(e,t){return l.apply(this,arguments)}),checkApproval:(c=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k,h,T,v;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.state,o=t.getters,c=t.rootState,t.rootGetters,l=t.dispatch,d=t.commit,m=n.amount,f=r.checkZeroTimes,m=Object(V.a)(m).times(Object(V.a)(10).pow(parseInt(r.tokenSelected.decimals))).toString(10),k=c.bulksender.bulksenderAddress,e.next=7,o.tokenInstance();case 7:return h=e.sent,T=c.metamask.ethAccount,v=0,e.abrupt("return",new Promise((function(e,t){var n=function(){var t=Object(W.a)(regeneratorRuntime.mark((function t(r){var o,c,w,data,E,y;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return o=r.retryAttempt,c=void 0===o?0:o,c++,t.prev=2,(w=c>=Math.ceil(f/2)+1)&&(m="0"),data=h.methods.approve(k,m).encodeABI(),E={method:"eth_estimateGas",params:[{from:T,to:h._address,data:data,value:Object(K.numberToHex)(0)}],from:T},t.next=9,l("metamask/sendAsync",E,{root:!0});case 9:y=t.sent,y=Object(K.hexToNumber)(y),d("SET_NEED_TO_RESET_APPROVAL",w),w&&(v=-1),e({usedApproveZero:w,errorType:v}),t.next=19;break;case 16:t.prev=16,t.t0=t.catch(2),c>=f?e({usedApproveZero:!0,errorType:v=-2}):n({retryAttempt:c});case 19:case"end":return t.stop()}}),t,null,[[2,16]])})));return function(e){return t.apply(this,arguments)}}();n({})})));case 11:case"end":return e.stop()}}),e)}))),function(e,t){return c.apply(this,arguments)}),approve:(o=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k,h,T,v,w,data,E,y,A,S;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.state,r=t.getters,o=t.rootState,c=t.rootGetters,l=t.dispatch,d=t.commit,m=n.bulksenderAddress,f=n.amount,k=0,h=null,e.prev=4,T=o.metamask.ethAccount,v=o.metamask.gasPrice.fast,c["metamask/networkConfig"].specialAccountList.includes(T)&&(v=o.metamask.gasPrice.instant),e.next=11,r.tokenInstance();case 11:return w=e.sent,data=w.methods.approve(m,f).encodeABI(),E={method:"eth_estimateGas",params:[{from:T,to:w._address,data:data,value:Object(K.numberToHex)(0)}],from:T},e.next=16,l("metamask/sendAsync",E,{root:!0});case 16:return y=e.sent,y=Object(K.hexToNumber)(y),console.log("approve tx",y),A={method:"eth_sendTransaction",params:[{from:T,to:w._address,gas:Object(K.numberToHex)(y+5e4),gasPrice:Object(K.toHex)(Object(K.toWei)(v.toString(),"gwei")),value:Object(K.numberToHex)(0),data:data}],from:T},e.next=22,l("metamask/sendAsync",A,{root:!0});case 22:return S=e.sent,d("ADD_TX",S),d("SET_TOKEN_APPROVE_TX",S),d("SET_TOKEN_APPROVE_TX_STATUS",0),d("SET_TOKEN_APPROVE_AMOUNT",f),l("checkApproveTransactionStatus"),e.abrupt("return",{txHash:S,errorType:k});case 31:return e.prev=31,e.t0=e.catch(4),console.info(e.t0),e.abrupt("return",{txHash:h,errorType:k});case 35:case"end":return e.stop()}}),e,null,[[4,31]])}))),function(e,t){return o.apply(this,arguments)}),_approveForNFTToken:(r=Object(W.a)(regeneratorRuntime.mark((function e(t,n){var r,o,c,l,d,m,f,k,h,T,v,w,E,data,y,A,S,O;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.state,r=t.getters,o=t.rootState,c=t.rootGetters,l=t.dispatch,d=t.commit,m=n.bulksenderAddress,f=n.setApproveAll,k=n.amount,h=0,T=null,e.prev=4,v=o.metamask.ethAccount,w=o.metamask.gasPrice.fast,c["metamask/networkConfig"].specialAccountList,e.next=10,r.tokenInstance();case 10:return E=e.sent,data=E.methods.setApprovalForAll(m,f).encodeABI(),y={method:"eth_estimateGas",params:[{from:v,to:E._address,data:data,value:Object(K.numberToHex)(0)}],from:v},e.next=15,l("metamask/sendAsync",y,{root:!0});case 15:return A=e.sent,A=Object(K.hexToNumber)(A),console.log("approve tx",A),S={method:"eth_sendTransaction",params:[{from:v,to:E._address,gas:Object(K.numberToHex)(A+5e4),gasPrice:Object(K.toHex)(Object(K.toWei)(w.toString(),"gwei")),value:Object(K.numberToHex)(0),data:data}],from:v},e.next=21,l("metamask/sendAsync",S,{root:!0});case 21:return O=e.sent,d("ADD_TX",O),d("SET_TOKEN_APPROVE_TX",O),d("SET_TOKEN_APPROVE_TX_STATUS",0),d("SET_TOKEN_APPROVE_AMOUNT",k),l("checkApproveTransactionStatus"),e.abrupt("return",{txHash:O,errorType:h});case 30:return e.prev=30,e.t0=e.catch(4),console.info(e.t0),e.abrupt("return",{txHash:T,errorType:h});case 34:case"end":return e.stop()}}),e,null,[[4,30]])}))),function(e,t){return r.apply(this,arguments)})};t.default={namespaced:!0,state:function(){return{address:null,balance:0,balanceDisplay:"",allowance:0,allowanceNumber:0,balanceNumber:0,allowanceEnough:!1,balanceEnough:!1,approveAmount:0,approveTx:"",approveTxStatus:-1,tokenSelected:null,tokenSelectedDisplayInfo:"",txs:[],tokenBalanceLoaded:!1,tokenAllowanceLoaded:!1,tokenInfoLoaded:!1,checkZeroTimes:4,needToResetApproval:!1,isERC721:!1,isERC1155:!1,tokenType:3,isNFTToken:!1,nftApproveAmount:"100000000000000000000000000000000000000001",unlimitedApproveAmount:"115792089237316195423570985008687907853269984665640564039457584007913129639935",price:0,priceLoaded:!1}},getters:X,mutations:{SET_TOKEN_ADDRESS:function(e,address){e.address=address},SET_TOKEN_BALANCE:function(e,t){e.balance=t},SET_TOKEN_SELECTED:function(e,t){e.tokenSelected=t},SET_TOKEN_SELECTED_DISPLAY_INFO:function(e,t){e.tokenSelectedDisplayInfo=t},SET_TOKEN_ALLOWANCE:function(e,t){e.allowance=t},SET_TOKEN_ALLOWANCE_ENOUGH:function(e,t){e.allowanceEnough=t},SET_TOKEN_BALANCE_ENOUGH:function(e,t){e.balanceEnough=t},SET_TOKEN_APPROVE_AMOUNT:function(e,t){e.approveAmount=t},SET_TOKEN_APPROVE_TX:function(e,t){e.approveTx=t},SET_TOKEN_APPROVE_TX_STATUS:function(e,t){e.approveTxStatus=t},SET_TOKEN_BALANCE_LOADED:function(e,t){e.tokenBalanceLoaded=t},SET_TOKEN_ALLOWANCE_LOADED:function(e,t){e.tokenAllowanceLoaded=t},SET_TOKEN_INFO_LOADED:function(e,t){e.tokenInfoLoaded=t},SET_NEED_TO_RESET_APPROVAL:function(e,t){e.needToResetApproval=t},SET_IS_ERC_721:function(e,t){e.isERC721=t},SET_TOKEN_TYPE:function(e,t){e.tokenType=t},SET_TOKEN_PRICE:function(e,t){e.price=t},SET_PRICE_LOADED:function(e,t){e.priceLoaded=t},ADD_TX:function(e,t){e.txs.push(t)},CLEAR:function(e){e.approveTx="",e.approveTxStatus=-1,e.needToResetApproval=!1}},actions:J}}}]);